{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nvar _templateObject;\nimport Button from \"../components/Button\";\nimport styled from \"styled-components/native\";\nimport AuthLayout from \"../components/AuthLayout\";\nimport { Input } from \"../components/shared\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { useRef } from \"react\";\nimport { useCreateAccountMutation } from \"../generated/graphql\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Contaienr = styled.View(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  width: 100%;\\n  padding: 0 20px;\\n\"])));\nvar SignUp = function SignUp(_ref) {\n  var navigation = _ref.navigation;\n  var nameRef = useRef(null);\n  var usernameRef = useRef(null);\n  var passwordRef = useRef(null);\n  var _useForm = useForm({\n      defaultValues: {\n        email: \"\",\n        name: \"\",\n        username: \"\",\n        password: \"\"\n      }\n    }),\n    control = _useForm.control,\n    handleSubmit = _useForm.handleSubmit,\n    getValues = _useForm.getValues;\n  var _useCreateAccountMuta = useCreateAccountMutation({\n      onCompleted: function onCompleted(data) {\n        if (data.createAccount.ok === false) {\n          return;\n        }\n        var _getValues = getValues(),\n          username = _getValues.username,\n          password = _getValues.password;\n        console.log(\"username, password\", username, password);\n        navigation.navigate(\"StackLogin\", {\n          username: username,\n          password: password\n        });\n      }\n    }),\n    _useCreateAccountMuta2 = _slicedToArray(_useCreateAccountMuta, 2),\n    createAccountMutation = _useCreateAccountMuta2[0],\n    createAccountLoading = _useCreateAccountMuta2[1].loading;\n  var onFocusNext = function onFocusNext(nextRef) {\n    var _nextRef$current;\n    (_nextRef$current = nextRef.current) == null ? void 0 : _nextRef$current.focus();\n  };\n  var onValid = function onValid() {\n    if (createAccountLoading === true) {\n      return;\n    }\n    var _getValues2 = getValues(),\n      email = _getValues2.email,\n      name = _getValues2.name,\n      username = _getValues2.username,\n      password = _getValues2.password;\n    createAccountMutation({\n      variables: {\n        email: email,\n        name: name,\n        username: username,\n        password: password\n      }\n    });\n  };\n  return _jsx(AuthLayout, {\n    children: _jsxs(Contaienr, {\n      children: [_jsx(Controller, {\n        name: \"email\",\n        control: control,\n        rules: {\n          required: true,\n          minLength: 1,\n          maxLength: 20\n        },\n        render: function render(_ref2) {\n          var _ref2$field = _ref2.field,\n            onChange = _ref2$field.onChange,\n            value = _ref2$field.value;\n          return _jsx(Input, {\n            value: value,\n            onChangeText: onChange,\n            onSubmitEditing: function onSubmitEditing() {\n              return onFocusNext(nameRef);\n            },\n            keyboardType: \"email-address\",\n            autoCapitalize: \"none\",\n            autoCorrect: false,\n            returnKeyType: \"done\",\n            placeholder: \"\\uC774\\uBA54\\uC77C\",\n            placeholderTextColor: \"gray\",\n            blurOnSubmit: false,\n            maxLength: 20\n          });\n        }\n      }), _jsx(Controller, {\n        name: \"name\",\n        control: control,\n        rules: {\n          required: true,\n          minLength: 1,\n          maxLength: 20\n        },\n        render: function render(_ref3) {\n          var _ref3$field = _ref3.field,\n            onChange = _ref3$field.onChange,\n            value = _ref3$field.value;\n          return _jsx(Input, {\n            value: value,\n            onChangeText: onChange,\n            onSubmitEditing: function onSubmitEditing() {\n              return onFocusNext(usernameRef);\n            },\n            ref: nameRef,\n            keyboardType: \"email-address\",\n            autoCapitalize: \"none\",\n            autoCorrect: false,\n            returnKeyType: \"done\",\n            placeholder: \"\\uC774\\uB984\",\n            placeholderTextColor: \"gray\",\n            blurOnSubmit: false,\n            maxLength: 20\n          });\n        }\n      }), _jsx(Controller, {\n        name: \"username\",\n        control: control,\n        rules: {\n          required: true,\n          minLength: 1,\n          maxLength: 20\n        },\n        render: function render(_ref4) {\n          var _ref4$field = _ref4.field,\n            onChange = _ref4$field.onChange,\n            value = _ref4$field.value;\n          return _jsx(Input, {\n            value: value,\n            onChangeText: onChange,\n            onSubmitEditing: function onSubmitEditing() {\n              return onFocusNext(passwordRef);\n            },\n            ref: usernameRef,\n            keyboardType: \"email-address\",\n            autoCapitalize: \"none\",\n            autoCorrect: false,\n            returnKeyType: \"done\",\n            placeholder: \"\\uC720\\uC800 \\uC774\\uB984\",\n            placeholderTextColor: \"gray\",\n            blurOnSubmit: false,\n            maxLength: 20\n          });\n        }\n      }), _jsx(Controller, {\n        name: \"password\",\n        control: control,\n        rules: {\n          required: true,\n          minLength: 1,\n          maxLength: 30\n        },\n        render: function render(_ref5) {\n          var _ref5$field = _ref5.field,\n            onChange = _ref5$field.onChange,\n            value = _ref5$field.value;\n          return _jsx(Input, {\n            value: value,\n            onChangeText: onChange,\n            onSubmitEditing: handleSubmit(onValid),\n            ref: passwordRef,\n            autoCapitalize: \"none\",\n            secureTextEntry: true,\n            placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n            placeholderTextColor: \"gray\",\n            maxLength: 30\n          });\n        }\n      }), _jsx(Button, {\n        onPress: handleSubmit(onValid),\n        text: \"\\uD68C\\uC6D0\\uAC00\\uC785\",\n        size: \"14px\",\n        bgFill: true,\n        loading: false,\n        disabled: false\n      })]\n    })\n  });\n};\nexport default SignUp;","map":{"version":3,"names":["Button","styled","AuthLayout","Input","useForm","Controller","useRef","useCreateAccountMutation","jsx","_jsx","jsxs","_jsxs","Contaienr","View","_templateObject","_taggedTemplateLiteralLoose","SignUp","_ref","navigation","nameRef","usernameRef","passwordRef","_useForm","defaultValues","email","name","username","password","control","handleSubmit","getValues","_useCreateAccountMuta","onCompleted","data","createAccount","ok","_getValues","console","log","navigate","_useCreateAccountMuta2","_slicedToArray","createAccountMutation","createAccountLoading","loading","onFocusNext","nextRef","_nextRef$current","current","focus","onValid","_getValues2","variables","children","rules","required","minLength","maxLength","render","_ref2","_ref2$field","field","onChange","value","onChangeText","onSubmitEditing","keyboardType","autoCapitalize","autoCorrect","returnKeyType","placeholder","placeholderTextColor","blurOnSubmit","_ref3","_ref3$field","ref","_ref4","_ref4$field","_ref5","_ref5$field","secureTextEntry","onPress","text","size","bgFill","disabled"],"sources":["C:/Users/GGPC/Documents/kidsgram-web/screens/SignUp.tsx"],"sourcesContent":["import Button from \"../components/Button\";\r\nimport styled from \"styled-components/native\";\r\nimport AuthLayout from \"../components/AuthLayout\";\r\nimport { Input } from \"../components/shared\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { MutableRefObject, RefObject, useRef } from \"react\";\r\nimport { RootStackParamList } from \"../shared/shared.types\";\r\nimport { NativeStackScreenProps } from \"@react-navigation/native-stack\";\r\nimport { CreateAccountMutation, useCreateAccountMutation } from \"../generated/graphql\";\r\n\r\ntype SignUpNavigationProps = NativeStackScreenProps<RootStackParamList, \"StackSignUp\">;\r\n\r\ninterface SignUpFormData {\r\n  email: string;\r\n  name: string;\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\nconst Contaienr = styled.View`\r\n  width: 100%;\r\n  padding: 0 20px;\r\n`;\r\n\r\nconst SignUp = ({ navigation }: SignUpNavigationProps) => {\r\n  const nameRef: MutableRefObject<null> = useRef(null);\r\n  const usernameRef: MutableRefObject<null> = useRef(null);\r\n  const passwordRef: MutableRefObject<null> = useRef(null);\r\n  const { control, handleSubmit, getValues } = useForm<SignUpFormData>({ defaultValues: { email: \"\", name: \"\", username: \"\", password: \"\" } });\r\n  const [createAccountMutation, { loading: createAccountLoading }] = useCreateAccountMutation({\r\n    onCompleted: (data: CreateAccountMutation) => {\r\n      if (data.createAccount.ok === false) {\r\n        return;\r\n      }\r\n      const { username, password } = getValues();\r\n      console.log(\"username, password\", username, password);\r\n\r\n      navigation.navigate(\"StackLogin\", { username, password });\r\n    },\r\n  });\r\n\r\n  const onFocusNext = (nextRef: RefObject<HTMLInputElement>): void => {\r\n    nextRef.current?.focus();\r\n  };\r\n\r\n  const onValid = (): void => {\r\n    if (createAccountLoading === true) {\r\n      return;\r\n    }\r\n    const { email, name, username, password } = getValues();\r\n    createAccountMutation({ variables: { email, name, username, password } });\r\n  };\r\n\r\n  return (\r\n    <AuthLayout>\r\n      <Contaienr>\r\n        <Controller\r\n          name=\"email\"\r\n          control={control}\r\n          rules={{ required: true, minLength: 1, maxLength: 20 }}\r\n          render={({ field: { onChange, value } }) => (\r\n            <Input\r\n              value={value}\r\n              onChangeText={onChange}\r\n              onSubmitEditing={() => onFocusNext(nameRef)}\r\n              keyboardType=\"email-address\"\r\n              autoCapitalize=\"none\"\r\n              autoCorrect={false}\r\n              returnKeyType=\"done\"\r\n              placeholder=\"이메일\"\r\n              placeholderTextColor=\"gray\"\r\n              blurOnSubmit={false}\r\n              maxLength={20}\r\n            ></Input>\r\n          )}\r\n        ></Controller>\r\n        <Controller\r\n          name=\"name\"\r\n          control={control}\r\n          rules={{ required: true, minLength: 1, maxLength: 20 }}\r\n          render={({ field: { onChange, value } }) => (\r\n            <Input\r\n              value={value}\r\n              onChangeText={onChange}\r\n              onSubmitEditing={() => onFocusNext(usernameRef)}\r\n              ref={nameRef}\r\n              keyboardType=\"email-address\"\r\n              autoCapitalize=\"none\"\r\n              autoCorrect={false}\r\n              returnKeyType=\"done\"\r\n              placeholder=\"이름\"\r\n              placeholderTextColor=\"gray\"\r\n              blurOnSubmit={false}\r\n              maxLength={20}\r\n            ></Input>\r\n          )}\r\n        ></Controller>\r\n        <Controller\r\n          name=\"username\"\r\n          control={control}\r\n          rules={{ required: true, minLength: 1, maxLength: 20 }}\r\n          render={({ field: { onChange, value } }) => (\r\n            <Input\r\n              value={value}\r\n              onChangeText={onChange}\r\n              onSubmitEditing={() => onFocusNext(passwordRef)}\r\n              ref={usernameRef}\r\n              keyboardType=\"email-address\"\r\n              autoCapitalize=\"none\"\r\n              autoCorrect={false}\r\n              returnKeyType=\"done\"\r\n              placeholder=\"유저 이름\"\r\n              placeholderTextColor=\"gray\"\r\n              blurOnSubmit={false}\r\n              maxLength={20}\r\n            ></Input>\r\n          )}\r\n        ></Controller>\r\n        <Controller\r\n          name=\"password\"\r\n          control={control}\r\n          rules={{ required: true, minLength: 1, maxLength: 30 }}\r\n          render={({ field: { onChange, value } }) => (\r\n            <Input\r\n              value={value}\r\n              onChangeText={onChange}\r\n              onSubmitEditing={handleSubmit(onValid)}\r\n              ref={passwordRef}\r\n              autoCapitalize=\"none\"\r\n              secureTextEntry={true}\r\n              placeholder=\"비밀번호\"\r\n              placeholderTextColor=\"gray\"\r\n              maxLength={30}\r\n            ></Input>\r\n          )}\r\n        ></Controller>\r\n        <Button onPress={handleSubmit(onValid)} text=\"회원가입\" size=\"14px\" bgFill={true} loading={false} disabled={false}></Button>\r\n      </Contaienr>\r\n    </AuthLayout>\r\n  );\r\n};\r\n\r\nexport default SignUp;"],"mappings":";;;AAAA,OAAOA,MAAM;AACb,OAAOC,MAAM,MAAM,0BAA0B;AAC7C,OAAOC,UAAU;AACjB,SAASC,KAAK;AACd,SAASC,OAAO,EAAEC,UAAU,QAAQ,iBAAiB;AACrD,SAAsCC,MAAM,QAAQ,OAAO;AAG3D,SAAgCC,wBAAwB;AAA+B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAWvF,IAAMC,SAAS,GAAGX,MAAM,CAACY,IAAI,CAAAC,eAAA,KAAAA,eAAA,GAAAC,2BAAA,8CAG5B;AAED,IAAMC,MAAM,GAAG,SAATA,MAAMA,CAAAC,IAAA,EAA8C;EAAA,IAAxCC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAC1B,IAAMC,OAA+B,GAAGb,MAAM,CAAC,IAAI,CAAC;EACpD,IAAMc,WAAmC,GAAGd,MAAM,CAAC,IAAI,CAAC;EACxD,IAAMe,WAAmC,GAAGf,MAAM,CAAC,IAAI,CAAC;EACxD,IAAAgB,QAAA,GAA6ClB,OAAO,CAAiB;MAAEmB,aAAa,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,IAAI,EAAE,EAAE;QAAEC,QAAQ,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAAG;IAAE,CAAC,CAAC;IAApIC,OAAO,GAAAN,QAAA,CAAPM,OAAO;IAAEC,YAAY,GAAAP,QAAA,CAAZO,YAAY;IAAEC,SAAS,GAAAR,QAAA,CAATQ,SAAS;EACxC,IAAAC,qBAAA,GAAmExB,wBAAwB,CAAC;MAC1FyB,WAAW,EAAE,SAAAA,YAACC,IAA2B,EAAK;QAC5C,IAAIA,IAAI,CAACC,aAAa,CAACC,EAAE,KAAK,KAAK,EAAE;UACnC;QACF;QACA,IAAAC,UAAA,GAA+BN,SAAS,CAAC,CAAC;UAAlCJ,QAAQ,GAAAU,UAAA,CAARV,QAAQ;UAAEC,QAAQ,GAAAS,UAAA,CAART,QAAQ;QAC1BU,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEZ,QAAQ,EAAEC,QAAQ,CAAC;QAErDT,UAAU,CAACqB,QAAQ,CAAC,YAAY,EAAE;UAAEb,QAAQ,EAARA,QAAQ;UAAEC,QAAQ,EAARA;QAAS,CAAC,CAAC;MAC3D;IACF,CAAC,CAAC;IAAAa,sBAAA,GAAAC,cAAA,CAAAV,qBAAA;IAVKW,qBAAqB,GAAAF,sBAAA;IAAaG,oBAAoB,GAAAH,sBAAA,IAA7BI,OAAO;EAYvC,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAIC,OAAoC,EAAW;IAAA,IAAAC,gBAAA;IAClE,CAAAA,gBAAA,GAAAD,OAAO,CAACE,OAAO,qBAAfD,gBAAA,CAAiBE,KAAK,CAAC,CAAC;EAC1B,CAAC;EAED,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAe;IAC1B,IAAIP,oBAAoB,KAAK,IAAI,EAAE;MACjC;IACF;IACA,IAAAQ,WAAA,GAA4CrB,SAAS,CAAC,CAAC;MAA/CN,KAAK,GAAA2B,WAAA,CAAL3B,KAAK;MAAEC,IAAI,GAAA0B,WAAA,CAAJ1B,IAAI;MAAEC,QAAQ,GAAAyB,WAAA,CAARzB,QAAQ;MAAEC,QAAQ,GAAAwB,WAAA,CAARxB,QAAQ;IACvCe,qBAAqB,CAAC;MAAEU,SAAS,EAAE;QAAE5B,KAAK,EAALA,KAAK;QAAEC,IAAI,EAAJA,IAAI;QAAEC,QAAQ,EAARA,QAAQ;QAAEC,QAAQ,EAARA;MAAS;IAAE,CAAC,CAAC;EAC3E,CAAC;EAED,OACElB,IAAA,CAACP,UAAU;IAAAmD,QAAA,EACT1C,KAAA,CAACC,SAAS;MAAAyC,QAAA,GACR5C,IAAA,CAACJ,UAAU;QACToB,IAAI,EAAC,OAAO;QACZG,OAAO,EAAEA,OAAQ;QACjB0B,KAAK,EAAE;UAAEC,QAAQ,EAAE,IAAI;UAAEC,SAAS,EAAE,CAAC;UAAEC,SAAS,EAAE;QAAG,CAAE;QACvDC,MAAM,EAAE,SAAAA,OAAAC,KAAA;UAAA,IAAAC,WAAA,GAAAD,KAAA,CAAGE,KAAK;YAAIC,QAAQ,GAAAF,WAAA,CAARE,QAAQ;YAAEC,KAAK,GAAAH,WAAA,CAALG,KAAK;UAAA,OACjCtD,IAAA,CAACN,KAAK;YACJ4D,KAAK,EAAEA,KAAM;YACbC,YAAY,EAAEF,QAAS;YACvBG,eAAe,EAAE,SAAAA,gBAAA;cAAA,OAAMpB,WAAW,CAAC1B,OAAO,CAAC;YAAA,CAAC;YAC5C+C,YAAY,EAAC,eAAe;YAC5BC,cAAc,EAAC,MAAM;YACrBC,WAAW,EAAE,KAAM;YACnBC,aAAa,EAAC,MAAM;YACpBC,WAAW,EAAC,oBAAK;YACjBC,oBAAoB,EAAC,MAAM;YAC3BC,YAAY,EAAE,KAAM;YACpBf,SAAS,EAAE;UAAG,CACR,CAAC;QAAA;MACT,CACS,CAAC,EACdhD,IAAA,CAACJ,UAAU;QACToB,IAAI,EAAC,MAAM;QACXG,OAAO,EAAEA,OAAQ;QACjB0B,KAAK,EAAE;UAAEC,QAAQ,EAAE,IAAI;UAAEC,SAAS,EAAE,CAAC;UAAEC,SAAS,EAAE;QAAG,CAAE;QACvDC,MAAM,EAAE,SAAAA,OAAAe,KAAA;UAAA,IAAAC,WAAA,GAAAD,KAAA,CAAGZ,KAAK;YAAIC,QAAQ,GAAAY,WAAA,CAARZ,QAAQ;YAAEC,KAAK,GAAAW,WAAA,CAALX,KAAK;UAAA,OACjCtD,IAAA,CAACN,KAAK;YACJ4D,KAAK,EAAEA,KAAM;YACbC,YAAY,EAAEF,QAAS;YACvBG,eAAe,EAAE,SAAAA,gBAAA;cAAA,OAAMpB,WAAW,CAACzB,WAAW,CAAC;YAAA,CAAC;YAChDuD,GAAG,EAAExD,OAAQ;YACb+C,YAAY,EAAC,eAAe;YAC5BC,cAAc,EAAC,MAAM;YACrBC,WAAW,EAAE,KAAM;YACnBC,aAAa,EAAC,MAAM;YACpBC,WAAW,EAAC,cAAI;YAChBC,oBAAoB,EAAC,MAAM;YAC3BC,YAAY,EAAE,KAAM;YACpBf,SAAS,EAAE;UAAG,CACR,CAAC;QAAA;MACT,CACS,CAAC,EACdhD,IAAA,CAACJ,UAAU;QACToB,IAAI,EAAC,UAAU;QACfG,OAAO,EAAEA,OAAQ;QACjB0B,KAAK,EAAE;UAAEC,QAAQ,EAAE,IAAI;UAAEC,SAAS,EAAE,CAAC;UAAEC,SAAS,EAAE;QAAG,CAAE;QACvDC,MAAM,EAAE,SAAAA,OAAAkB,KAAA;UAAA,IAAAC,WAAA,GAAAD,KAAA,CAAGf,KAAK;YAAIC,QAAQ,GAAAe,WAAA,CAARf,QAAQ;YAAEC,KAAK,GAAAc,WAAA,CAALd,KAAK;UAAA,OACjCtD,IAAA,CAACN,KAAK;YACJ4D,KAAK,EAAEA,KAAM;YACbC,YAAY,EAAEF,QAAS;YACvBG,eAAe,EAAE,SAAAA,gBAAA;cAAA,OAAMpB,WAAW,CAACxB,WAAW,CAAC;YAAA,CAAC;YAChDsD,GAAG,EAAEvD,WAAY;YACjB8C,YAAY,EAAC,eAAe;YAC5BC,cAAc,EAAC,MAAM;YACrBC,WAAW,EAAE,KAAM;YACnBC,aAAa,EAAC,MAAM;YACpBC,WAAW,EAAC,2BAAO;YACnBC,oBAAoB,EAAC,MAAM;YAC3BC,YAAY,EAAE,KAAM;YACpBf,SAAS,EAAE;UAAG,CACR,CAAC;QAAA;MACT,CACS,CAAC,EACdhD,IAAA,CAACJ,UAAU;QACToB,IAAI,EAAC,UAAU;QACfG,OAAO,EAAEA,OAAQ;QACjB0B,KAAK,EAAE;UAAEC,QAAQ,EAAE,IAAI;UAAEC,SAAS,EAAE,CAAC;UAAEC,SAAS,EAAE;QAAG,CAAE;QACvDC,MAAM,EAAE,SAAAA,OAAAoB,KAAA;UAAA,IAAAC,WAAA,GAAAD,KAAA,CAAGjB,KAAK;YAAIC,QAAQ,GAAAiB,WAAA,CAARjB,QAAQ;YAAEC,KAAK,GAAAgB,WAAA,CAALhB,KAAK;UAAA,OACjCtD,IAAA,CAACN,KAAK;YACJ4D,KAAK,EAAEA,KAAM;YACbC,YAAY,EAAEF,QAAS;YACvBG,eAAe,EAAEpC,YAAY,CAACqB,OAAO,CAAE;YACvCyB,GAAG,EAAEtD,WAAY;YACjB8C,cAAc,EAAC,MAAM;YACrBa,eAAe,EAAE,IAAK;YACtBV,WAAW,EAAC,0BAAM;YAClBC,oBAAoB,EAAC,MAAM;YAC3Bd,SAAS,EAAE;UAAG,CACR,CAAC;QAAA;MACT,CACS,CAAC,EACdhD,IAAA,CAACT,MAAM;QAACiF,OAAO,EAAEpD,YAAY,CAACqB,OAAO,CAAE;QAACgC,IAAI,EAAC,0BAAM;QAACC,IAAI,EAAC,MAAM;QAACC,MAAM,EAAE,IAAK;QAACxC,OAAO,EAAE,KAAM;QAACyC,QAAQ,EAAE;MAAM,CAAS,CAAC;IAAA,CAC/G;EAAC,CACF,CAAC;AAEjB,CAAC;AAED,eAAerE,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}