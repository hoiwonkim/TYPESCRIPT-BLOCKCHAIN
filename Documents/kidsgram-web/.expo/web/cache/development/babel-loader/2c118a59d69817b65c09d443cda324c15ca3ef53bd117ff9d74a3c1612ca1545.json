{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { onError } from \"@apollo/client/link/error\";\nimport { WebSocketLink } from \"@apollo/client/link/ws\";\nimport { createUploadLink } from \"apollo-upload-client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { getMainDefinition } from \"@apollo/client/utilities\";\nimport { ApolloClient, createHttpLink, InMemoryCache, makeVar, split } from \"@apollo/client\";\nexport var isLoggedInVar = makeVar(false);\nexport var tokenVar = makeVar(\"\");\nexport var isDarkModeVar = makeVar(\"light\");\nexport var handleLogin = function () {\n  var _ref = _asyncToGenerator(function* (token) {\n    try {\n      var tokenData = [\"token\", token];\n      var isLoggedInData = [\"isLoggedIn\", JSON.stringify(true)];\n      yield AsyncStorage.multiSet([tokenData, isLoggedInData]);\n      isLoggedInVar(true);\n      tokenVar(token);\n    } catch (error) {\n      console.log(\"handleLogin error\");\n    }\n  });\n  return function handleLogin(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var handleLogout = function () {\n  var _ref2 = _asyncToGenerator(function* () {\n    try {\n      var keys = [\"token\", \"isLoggedIn\"];\n      yield AsyncStorage.multiRemove(keys);\n      client.clearStore();\n      isLoggedInVar(false);\n      tokenVar(\"\");\n    } catch (error) {\n      console.log(\"handleLogout error\");\n    }\n  });\n  return function handleLogout() {\n    return _ref2.apply(this, arguments);\n  };\n}();\nvar httpLink = createHttpLink({\n  uri: \"http://localhost:4000/graphql\"\n});\nvar authLink = setContext(function (_, _ref3) {\n  var headers = _ref3.headers;\n  return {\n    headers: _objectSpread(_objectSpread({}, headers), {}, {\n      token: tokenVar()\n    })\n  };\n});\nvar errorLink = onError(function (_ref4) {\n  var graphQLErrors = _ref4.graphQLErrors,\n    networkError = _ref4.networkError;\n  if (graphQLErrors) {\n    console.log(\"graphQLErrors\", graphQLErrors);\n  }\n  if (networkError) {\n    console.log(\"networkError\", networkError);\n  }\n});\nvar uploadHttpLink = createUploadLink({\n  uri: \"https://instagram-gw.herokuapp.com/graphql\"\n});\nvar uploadHttpLinks = authLink.concat(errorLink).concat(uploadHttpLink);\nvar wsLink = new WebSocketLink({\n  uri: \"ws://instagram-gw.herokuapp.com/graphql\",\n  options: {\n    reconnect: true,\n    connectionParams: function connectionParams() {\n      return {\n        token: tokenVar()\n      };\n    }\n  }\n});\nvar splitLink = split(function (_ref5) {\n  var query = _ref5.query;\n  var definition = getMainDefinition(query);\n  var isSubscription = definition.kind === \"OperationDefinition\" && definition.operation === \"subscription\";\n  return isSubscription;\n}, wsLink, uploadHttpLinks);\nexport var cache = new InMemoryCache({\n  typePolicies: {\n    Query: {\n      fields: {\n        seeFeed: {\n          keyArgs: false,\n          merge: function merge(existing, incoming) {\n            if (existing) {\n              var result = _objectSpread(_objectSpread(_objectSpread({}, existing), incoming), {}, {\n                photos: [].concat(_toConsumableArray(existing.photos), _toConsumableArray(incoming.photos))\n              });\n              return result;\n            }\n            return incoming;\n          }\n        }\n      }\n    }\n  }\n});\nvar client = new ApolloClient({\n  link: splitLink,\n  cache: cache\n});\nexport default client;","map":{"version":3,"names":["AsyncStorage","onError","WebSocketLink","createUploadLink","setContext","getMainDefinition","ApolloClient","createHttpLink","InMemoryCache","makeVar","split","isLoggedInVar","tokenVar","isDarkModeVar","handleLogin","_ref","_asyncToGenerator","token","tokenData","isLoggedInData","JSON","stringify","multiSet","error","console","log","_x","apply","arguments","handleLogout","_ref2","keys","multiRemove","client","clearStore","httpLink","uri","authLink","_","_ref3","headers","_objectSpread","errorLink","_ref4","graphQLErrors","networkError","uploadHttpLink","uploadHttpLinks","concat","wsLink","options","reconnect","connectionParams","splitLink","_ref5","query","definition","isSubscription","kind","operation","cache","typePolicies","Query","fields","seeFeed","keyArgs","merge","existing","incoming","result","photos","_toConsumableArray","link"],"sources":["C:/Users/GGPC/Documents/kidsgram-web/apollo.ts"],"sourcesContent":["import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { createClient } from \"graphql-ws\";\r\nimport { onError } from \"@apollo/client/link/error\";\r\nimport { WebSocketLink } from \"@apollo/client/link/ws\";\r\nimport { createUploadLink } from \"apollo-upload-client\";\r\nimport { setContext } from \"@apollo/client/link/context\";\r\nimport { GraphQLWsLink } from \"@apollo/client/link/subscriptions\";\r\nimport { FragmentDefinitionNode, OperationDefinitionNode } from \"graphql\";\r\nimport { getMainDefinition, offsetLimitPagination } from \"@apollo/client/utilities\";\r\nimport { ApolloClient, ApolloLink, createHttpLink, InMemoryCache, makeVar, NormalizedCacheObject, split } from \"@apollo/client\";\r\n\r\nexport const isLoggedInVar = makeVar<boolean>(false);\r\nexport const tokenVar = makeVar<string>(\"\");\r\nexport const isDarkModeVar = makeVar<\"light\" | \"dark\">(\"light\");\r\n\r\nexport const handleLogin = async (token: string): Promise<void> => {\r\n  try {\r\n    const tokenData: string[] = [\"token\", token];\r\n    const isLoggedInData: string[] = [\"isLoggedIn\", JSON.stringify(true)];\r\n    await AsyncStorage.multiSet([tokenData, isLoggedInData]);\r\n    isLoggedInVar(true);\r\n    tokenVar(token);\r\n  } catch (error) {\r\n    console.log(\"handleLogin error\");\r\n  }\r\n};\r\n\r\nexport const handleLogout = async (): Promise<void> => {\r\n  try {\r\n    const keys: string[] = [\"token\", \"isLoggedIn\"];\r\n    await AsyncStorage.multiRemove(keys);\r\n    client.clearStore();\r\n    isLoggedInVar(false);\r\n    tokenVar(\"\");\r\n  } catch (error) {\r\n    console.log(\"handleLogout error\");\r\n  }\r\n};\r\n\r\nconst httpLink: ApolloLink = createHttpLink({\r\n  uri: \"http://localhost:4000/graphql\",\r\n});\r\n\r\nconst authLink: ApolloLink = setContext((_, { headers }) => {\r\n  return { headers: { ...headers, token: tokenVar() } };\r\n});\r\n\r\nconst errorLink: ApolloLink = onError(({ graphQLErrors, networkError }) => {\r\n  if (graphQLErrors) {\r\n    console.log(\"graphQLErrors\", graphQLErrors);\r\n  }\r\n  if (networkError) {\r\n    console.log(\"networkError\", networkError);\r\n  }\r\n});\r\n\r\nconst uploadHttpLink: ApolloLink = createUploadLink({\r\n  uri: \"https://instagram-gw.herokuapp.com/graphql\",\r\n});\r\n\r\nconst uploadHttpLinks: ApolloLink = authLink.concat(errorLink).concat(uploadHttpLink);\r\n\r\n/* GraphQLWsLink\r\nconst wsLink: GraphQLWsLink = new GraphQLWsLink(\r\n  createClient({\r\n    url: \"ws://instagram-gw.herokuapp.com/graphql\",\r\n    connectionParams: () => ({\r\n      token: tokenVar(),\r\n    }),\r\n  })\r\n);\r\n*/\r\n\r\nconst wsLink = new WebSocketLink({\r\n  uri: \"ws://instagram-gw.herokuapp.com/graphql\",\r\n  options: {\r\n    reconnect: true,\r\n    connectionParams: () => ({\r\n      token: tokenVar(),\r\n    }),\r\n  },\r\n});\r\n\r\nconst splitLink = split(\r\n  ({ query }) => {\r\n    const definition: OperationDefinitionNode | FragmentDefinitionNode = getMainDefinition(query);\r\n    const isSubscription: boolean = definition.kind === \"OperationDefinition\" && definition.operation === \"subscription\";\r\n    return isSubscription;\r\n  },\r\n  wsLink,\r\n  uploadHttpLinks\r\n);\r\n\r\nexport const cache = new InMemoryCache({\r\n  typePolicies: {\r\n    Query: {\r\n      fields: {\r\n        seeFeed: {\r\n          keyArgs: false,\r\n          merge(existing, incoming) {\r\n            if (existing) {\r\n              const result = { ...existing, ...incoming, photos: [...existing.photos, ...incoming.photos] };\r\n              return result;\r\n            }\r\n            return incoming;\r\n          },\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nconst client: ApolloClient<NormalizedCacheObject> = new ApolloClient({\r\n  link: splitLink,\r\n  cache,\r\n});\r\n\r\nexport default client;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}