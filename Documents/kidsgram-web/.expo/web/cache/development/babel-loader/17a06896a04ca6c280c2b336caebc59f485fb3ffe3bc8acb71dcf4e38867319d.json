{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport { isColor, convertToRGBA, rgbaArrayToRGBAColor, toGammaSpace, toLinearSpace } from \"../Colors\";\nimport NativeReanimatedModule from \"../NativeReanimated\";\nvar IN_STYLE_UPDATER = false;\nexport function initialUpdaterRun(updater) {\n  IN_STYLE_UPDATER = true;\n  var result = updater();\n  IN_STYLE_UPDATER = false;\n  return result;\n}\nfunction recognizePrefixSuffix(value) {\n  'worklet';\n\n  if (typeof value === 'string') {\n    var _match$;\n    var match = value.match(/([A-Za-z]*)(-?\\d*\\.?\\d*)([eE][-+]?[0-9]+)?([A-Za-z%]*)/);\n    if (!match) {\n      throw Error(\"Couldn't parse animation value. Check if there isn't any typo.\");\n    }\n    var prefix = match[1];\n    var suffix = match[4];\n    var number = match[2] + ((_match$ = match[3]) != null ? _match$ : '');\n    return {\n      prefix: prefix,\n      suffix: suffix,\n      strippedValue: parseFloat(number)\n    };\n  } else {\n    return {\n      strippedValue: value\n    };\n  }\n}\nfunction decorateAnimation(animation) {\n  'worklet';\n\n  if (animation.isHigherOrder) {\n    return;\n  }\n  var baseOnStart = animation.onStart;\n  var baseOnFrame = animation.onFrame;\n  var animationCopy = _extends({}, animation);\n  delete animationCopy.callback;\n  var prefNumberSuffOnStart = function prefNumberSuffOnStart(animation, value, timestamp, previousAnimation) {\n    var _animation$__prefix, _animation$__suffix;\n    var _recognizePrefixSuffi = recognizePrefixSuffix(value),\n      prefix = _recognizePrefixSuffi.prefix,\n      suffix = _recognizePrefixSuffi.suffix,\n      strippedValue = _recognizePrefixSuffi.strippedValue;\n    animation.__prefix = prefix;\n    animation.__suffix = suffix;\n    animation.strippedCurrent = strippedValue;\n    var _recognizePrefixSuffi2 = recognizePrefixSuffix(animation.toValue),\n      strippedToValue = _recognizePrefixSuffi2.strippedValue;\n    animation.current = strippedValue;\n    animation.startValue = strippedValue;\n    animation.toValue = strippedToValue;\n    if (previousAnimation && previousAnimation !== animation) {\n      var _recognizePrefixSuffi3 = recognizePrefixSuffix(previousAnimation.current),\n        paPrefix = _recognizePrefixSuffi3.prefix,\n        paSuffix = _recognizePrefixSuffi3.suffix,\n        paStrippedValue = _recognizePrefixSuffi3.strippedValue;\n      previousAnimation.current = paStrippedValue;\n      previousAnimation.__prefix = paPrefix;\n      previousAnimation.__suffix = paSuffix;\n    }\n    baseOnStart(animation, strippedValue, timestamp, previousAnimation);\n    animation.current = ((_animation$__prefix = animation.__prefix) != null ? _animation$__prefix : '') + animation.current + ((_animation$__suffix = animation.__suffix) != null ? _animation$__suffix : '');\n    if (previousAnimation && previousAnimation !== animation) {\n      var _previousAnimation$__, _previousAnimation$__2;\n      previousAnimation.current = ((_previousAnimation$__ = previousAnimation.__prefix) != null ? _previousAnimation$__ : '') + previousAnimation.current + ((_previousAnimation$__2 = previousAnimation.__suffix) != null ? _previousAnimation$__2 : '');\n    }\n  };\n  var prefNumberSuffOnFrame = function prefNumberSuffOnFrame(animation, timestamp) {\n    var _animation$__prefix2, _animation$__suffix2;\n    animation.current = animation.strippedCurrent;\n    var res = baseOnFrame(animation, timestamp);\n    animation.strippedCurrent = animation.current;\n    animation.current = ((_animation$__prefix2 = animation.__prefix) != null ? _animation$__prefix2 : '') + animation.current + ((_animation$__suffix2 = animation.__suffix) != null ? _animation$__suffix2 : '');\n    return res;\n  };\n  var tab = ['R', 'G', 'B', 'A'];\n  var colorOnStart = function colorOnStart(animation, value, timestamp, previousAnimation) {\n    var RGBAValue;\n    var RGBACurrent;\n    var RGBAToValue;\n    var res = [];\n    if (isColor(value)) {\n      RGBACurrent = toLinearSpace(convertToRGBA(animation.current));\n      RGBAValue = toLinearSpace(convertToRGBA(value));\n      if (animation.toValue) {\n        RGBAToValue = toLinearSpace(convertToRGBA(animation.toValue));\n      }\n    }\n    tab.forEach(function (i, index) {\n      animation[i] = _extends({}, animationCopy);\n      animation[i].current = RGBACurrent[index];\n      animation[i].toValue = RGBAToValue ? RGBAToValue[index] : undefined;\n      animation[i].onStart(animation[i], RGBAValue[index], timestamp, previousAnimation ? previousAnimation[i] : undefined);\n      res.push(animation[i].current);\n    });\n    animation.current = rgbaArrayToRGBAColor(toGammaSpace(res));\n  };\n  var colorOnFrame = function colorOnFrame(animation, timestamp) {\n    var RGBACurrent = toLinearSpace(convertToRGBA(animation.current));\n    var res = [];\n    var finished = true;\n    tab.forEach(function (i, index) {\n      animation[i].current = RGBACurrent[index];\n      finished &= animation[i].onFrame(animation[i], timestamp);\n      res.push(animation[i].current);\n    });\n    animation.current = rgbaArrayToRGBAColor(toGammaSpace(res));\n    return finished;\n  };\n  var arrayOnStart = function arrayOnStart(animation, value, timestamp, previousAnimation) {\n    value.forEach(function (v, i) {\n      animation[i] = _extends({}, animationCopy);\n      animation[i].current = v;\n      animation[i].toValue = animation.toValue[i];\n      animation[i].onStart(animation[i], v, timestamp, previousAnimation ? previousAnimation[i] : undefined);\n    });\n    animation.current = value;\n  };\n  var arrayOnFrame = function arrayOnFrame(animation, timestamp) {\n    var finished = true;\n    animation.current.forEach(function (v, i) {\n      finished &= animation[i].onFrame(animation[i], timestamp);\n      animation.current[i] = animation[i].current;\n    });\n    return finished;\n  };\n  var objectOnStart = function objectOnStart(animation, value, timestamp, previousAnimation) {\n    for (var key in value) {\n      animation[key] = _extends({}, animationCopy);\n      animation[key].onStart = animation.onStart;\n      animation[key].current = value[key];\n      animation[key].toValue = animation.toValue[key];\n      animation[key].onStart(animation[key], value[key], timestamp, previousAnimation ? previousAnimation[key] : undefined);\n    }\n    animation.current = value;\n  };\n  var objectOnFrame = function objectOnFrame(animation, timestamp) {\n    var finished = true;\n    var newObject = {};\n    for (var key in animation.current) {\n      finished &= animation[key].onFrame(animation[key], timestamp);\n      newObject[key] = animation[key].current;\n    }\n    animation.current = newObject;\n    return finished;\n  };\n  animation.onStart = function (animation, value, timestamp, previousAnimation) {\n    if (isColor(value)) {\n      colorOnStart(animation, value, timestamp, previousAnimation);\n      animation.onFrame = colorOnFrame;\n      return;\n    } else if (Array.isArray(value)) {\n      arrayOnStart(animation, value, timestamp, previousAnimation);\n      animation.onFrame = arrayOnFrame;\n      return;\n    } else if (typeof value === 'string') {\n      prefNumberSuffOnStart(animation, value, timestamp, previousAnimation);\n      animation.onFrame = prefNumberSuffOnFrame;\n      return;\n    } else if (typeof value === 'object' && value !== null) {\n      objectOnStart(animation, value, timestamp, previousAnimation);\n      animation.onFrame = objectOnFrame;\n      return;\n    }\n    baseOnStart(animation, value, timestamp, previousAnimation);\n  };\n}\nvar IS_NATIVE = NativeReanimatedModule.native;\nexport function defineAnimation(starting, factory) {\n  'worklet';\n\n  if (IN_STYLE_UPDATER) {\n    return starting;\n  }\n  var create = function create() {\n    'worklet';\n\n    var animation = factory();\n    decorateAnimation(animation);\n    return animation;\n  };\n  if (_WORKLET || !IS_NATIVE) {\n    return create();\n  }\n  return create;\n}\nexport function cancelAnimation(sharedValue) {\n  'worklet';\n  sharedValue.value = sharedValue.value;\n}\nexport function withStartValue(startValue, animation) {\n  'worklet';\n\n  return defineAnimation(startValue, function () {\n    'worklet';\n\n    if (!_WORKLET && typeof animation === 'function') {\n      animation = animation();\n    }\n    animation.current = startValue;\n    return animation;\n  });\n}","map":{"version":3,"names":["isColor","convertToRGBA","rgbaArrayToRGBAColor","toGammaSpace","toLinearSpace","NativeReanimatedModule","IN_STYLE_UPDATER","initialUpdaterRun","updater","result","recognizePrefixSuffix","value","_match$","match","Error","prefix","suffix","number","strippedValue","parseFloat","decorateAnimation","animation","isHigherOrder","baseOnStart","onStart","baseOnFrame","onFrame","animationCopy","_extends","callback","prefNumberSuffOnStart","timestamp","previousAnimation","_animation$__prefix","_animation$__suffix","_recognizePrefixSuffi","__prefix","__suffix","strippedCurrent","_recognizePrefixSuffi2","toValue","strippedToValue","current","startValue","_recognizePrefixSuffi3","paPrefix","paSuffix","paStrippedValue","_previousAnimation$__","_previousAnimation$__2","prefNumberSuffOnFrame","_animation$__prefix2","_animation$__suffix2","res","tab","colorOnStart","RGBAValue","RGBACurrent","RGBAToValue","forEach","i","index","undefined","push","colorOnFrame","finished","arrayOnStart","v","arrayOnFrame","objectOnStart","key","objectOnFrame","newObject","Array","isArray","IS_NATIVE","native","defineAnimation","starting","factory","create","_WORKLET","cancelAnimation","sharedValue","withStartValue"],"sources":["C:\\Users\\GGPC\\Documents\\kidsgram-web\\node_modules\\react-native-reanimated\\lib\\module\\reanimated2\\animation\\util.ts"],"sourcesContent":["import {\n  HigherOrderAnimation,\n  NextAnimation,\n  DelayAnimation,\n  RepeatAnimation,\n  SequenceAnimation,\n  StyleLayoutAnimation,\n} from './commonTypes';\n/* global _WORKLET */\nimport {\n  ParsedColorArray,\n  isColor,\n  convertToRGBA,\n  rgbaArrayToRGBAColor,\n  toGammaSpace,\n  toLinearSpace,\n} from '../Colors';\n\nimport {\n  AnimatedStyle,\n  SharedValue,\n  AnimatableValue,\n  Animation,\n  AnimationObject,\n  Timestamp,\n  AnimatableValueObject,\n} from '../commonTypes';\nimport NativeReanimatedModule from '../NativeReanimated';\n\nlet IN_STYLE_UPDATER = false;\n\nexport type UserUpdater = () => AnimatedStyle;\n\nexport function initialUpdaterRun<T>(updater: () => T): T {\n  IN_STYLE_UPDATER = true;\n  const result = updater();\n  IN_STYLE_UPDATER = false;\n  return result;\n}\n\ninterface RecognizedPrefixSuffix {\n  prefix?: string;\n  suffix?: string;\n  strippedValue: number;\n}\n\nfunction recognizePrefixSuffix(value: string | number): RecognizedPrefixSuffix {\n  'worklet';\n  if (typeof value === 'string') {\n    const match = value.match(\n      /([A-Za-z]*)(-?\\d*\\.?\\d*)([eE][-+]?[0-9]+)?([A-Za-z%]*)/\n    );\n    if (!match) {\n      throw Error(\n        \"Couldn't parse animation value. Check if there isn't any typo.\"\n      );\n    }\n    const prefix = match[1];\n    const suffix = match[4];\n    // number with scientific notation\n    const number = match[2] + (match[3] ?? '');\n    return { prefix, suffix, strippedValue: parseFloat(number) };\n  } else {\n    return { strippedValue: value };\n  }\n}\n\nfunction decorateAnimation<T extends AnimationObject | StyleLayoutAnimation>(\n  animation: T\n): void {\n  'worklet';\n  if ((animation as HigherOrderAnimation).isHigherOrder) {\n    return;\n  }\n\n  const baseOnStart = (animation as Animation<AnimationObject>).onStart;\n  const baseOnFrame = (animation as Animation<AnimationObject>).onFrame;\n  const animationCopy = Object.assign({}, animation);\n  delete animationCopy.callback;\n\n  const prefNumberSuffOnStart = (\n    animation: Animation<AnimationObject>,\n    value: string | number,\n    timestamp: number,\n    previousAnimation: Animation<AnimationObject>\n  ) => {\n    // recognize prefix, suffix, and updates stripped value on animation start\n    const { prefix, suffix, strippedValue } = recognizePrefixSuffix(value);\n    animation.__prefix = prefix;\n    animation.__suffix = suffix;\n    animation.strippedCurrent = strippedValue;\n    const { strippedValue: strippedToValue } = recognizePrefixSuffix(\n      animation.toValue as string | number\n    );\n    animation.current = strippedValue;\n    animation.startValue = strippedValue;\n    animation.toValue = strippedToValue;\n    if (previousAnimation && previousAnimation !== animation) {\n      const {\n        prefix: paPrefix,\n        suffix: paSuffix,\n        strippedValue: paStrippedValue,\n      } = recognizePrefixSuffix(previousAnimation.current as string | number);\n      previousAnimation.current = paStrippedValue;\n      previousAnimation.__prefix = paPrefix;\n      previousAnimation.__suffix = paSuffix;\n    }\n\n    baseOnStart(animation, strippedValue, timestamp, previousAnimation);\n\n    animation.current =\n      (animation.__prefix ?? '') +\n      animation.current +\n      (animation.__suffix ?? '');\n\n    if (previousAnimation && previousAnimation !== animation) {\n      previousAnimation.current =\n        (previousAnimation.__prefix ?? '') +\n        previousAnimation.current +\n        (previousAnimation.__suffix ?? '');\n    }\n  };\n  const prefNumberSuffOnFrame = (\n    animation: Animation<AnimationObject>,\n    timestamp: number\n  ) => {\n    animation.current = animation.strippedCurrent;\n    const res = baseOnFrame(animation, timestamp);\n    animation.strippedCurrent = animation.current;\n    animation.current =\n      (animation.__prefix ?? '') +\n      animation.current +\n      (animation.__suffix ?? '');\n    return res;\n  };\n\n  const tab = ['R', 'G', 'B', 'A'];\n  const colorOnStart = (\n    animation: Animation<AnimationObject>,\n    value: string | number,\n    timestamp: Timestamp,\n    previousAnimation: Animation<AnimationObject>\n  ): void => {\n    let RGBAValue: ParsedColorArray;\n    let RGBACurrent: ParsedColorArray;\n    let RGBAToValue: ParsedColorArray;\n    const res: Array<number> = [];\n    if (isColor(value)) {\n      RGBACurrent = toLinearSpace(convertToRGBA(animation.current));\n      RGBAValue = toLinearSpace(convertToRGBA(value));\n      if (animation.toValue) {\n        RGBAToValue = toLinearSpace(convertToRGBA(animation.toValue));\n      }\n    }\n    tab.forEach((i, index) => {\n      animation[i] = Object.assign({}, animationCopy);\n      animation[i].current = RGBACurrent[index];\n      animation[i].toValue = RGBAToValue ? RGBAToValue[index] : undefined;\n      animation[i].onStart(\n        animation[i],\n        RGBAValue[index],\n        timestamp,\n        previousAnimation ? previousAnimation[i] : undefined\n      );\n      res.push(animation[i].current);\n    });\n\n    animation.current = rgbaArrayToRGBAColor(\n      toGammaSpace(res as ParsedColorArray)\n    );\n  };\n\n  const colorOnFrame = (\n    animation: Animation<AnimationObject>,\n    timestamp: Timestamp\n  ): boolean => {\n    const RGBACurrent = toLinearSpace(convertToRGBA(animation.current));\n    const res: Array<number> = [];\n    let finished = true;\n    tab.forEach((i, index) => {\n      animation[i].current = RGBACurrent[index];\n      // @ts-ignore: disable-next-line\n      finished &= animation[i].onFrame(animation[i], timestamp);\n      res.push(animation[i].current);\n    });\n\n    animation.current = rgbaArrayToRGBAColor(\n      toGammaSpace(res as ParsedColorArray)\n    );\n    return finished;\n  };\n\n  const arrayOnStart = (\n    animation: Animation<AnimationObject>,\n    value: Array<number>,\n    timestamp: Timestamp,\n    previousAnimation: Animation<AnimationObject>\n  ): void => {\n    value.forEach((v, i) => {\n      animation[i] = Object.assign({}, animationCopy);\n      animation[i].current = v;\n      animation[i].toValue = (animation.toValue as Array<number>)[i];\n      animation[i].onStart(\n        animation[i],\n        v,\n        timestamp,\n        previousAnimation ? previousAnimation[i] : undefined\n      );\n    });\n\n    animation.current = value;\n  };\n\n  const arrayOnFrame = (\n    animation: Animation<AnimationObject>,\n    timestamp: Timestamp\n  ): boolean => {\n    let finished = true;\n    (animation.current as Array<number>).forEach((v, i) => {\n      // @ts-ignore: disable-next-line\n      finished &= animation[i].onFrame(animation[i], timestamp);\n      (animation.current as Array<number>)[i] = animation[i].current;\n    });\n\n    return finished;\n  };\n\n  const objectOnStart = (\n    animation: Animation<AnimationObject>,\n    value: AnimatableValueObject,\n    timestamp: Timestamp,\n    previousAnimation: Animation<AnimationObject>\n  ): void => {\n    for (const key in value) {\n      animation[key] = Object.assign({}, animationCopy);\n      animation[key].onStart = animation.onStart;\n\n      animation[key].current = value[key];\n      animation[key].toValue = (animation.toValue as AnimatableValueObject)[\n        key\n      ];\n      animation[key].onStart(\n        animation[key],\n        value[key],\n        timestamp,\n        previousAnimation ? previousAnimation[key] : undefined\n      );\n    }\n    animation.current = value;\n  };\n\n  const objectOnFrame = (\n    animation: Animation<AnimationObject>,\n    timestamp: Timestamp\n  ): boolean => {\n    let finished = true;\n    const newObject: AnimatableValueObject = {};\n    for (const key in animation.current as AnimatableValueObject) {\n      // @ts-ignore: disable-next-line\n      finished &= animation[key].onFrame(animation[key], timestamp);\n      newObject[key] = animation[key].current;\n    }\n    animation.current = newObject;\n    return finished;\n  };\n\n  animation.onStart = (\n    animation: Animation<AnimationObject>,\n    value: number,\n    timestamp: Timestamp,\n    previousAnimation: Animation<AnimationObject>\n  ) => {\n    if (isColor(value)) {\n      colorOnStart(animation, value, timestamp, previousAnimation);\n      animation.onFrame = colorOnFrame;\n      return;\n    } else if (Array.isArray(value)) {\n      arrayOnStart(animation, value, timestamp, previousAnimation);\n      animation.onFrame = arrayOnFrame;\n      return;\n    } else if (typeof value === 'string') {\n      prefNumberSuffOnStart(animation, value, timestamp, previousAnimation);\n      animation.onFrame = prefNumberSuffOnFrame;\n      return;\n    } else if (typeof value === 'object' && value !== null) {\n      objectOnStart(animation, value, timestamp, previousAnimation);\n      animation.onFrame = objectOnFrame;\n      return;\n    }\n    baseOnStart(animation, value, timestamp, previousAnimation);\n  };\n}\n\ntype AnimationToDecoration<T extends AnimationObject | StyleLayoutAnimation> =\n  T extends StyleLayoutAnimation\n    ? Record<string, unknown>\n    : T extends DelayAnimation\n    ? NextAnimation<DelayAnimation>\n    : T extends RepeatAnimation\n    ? NextAnimation<RepeatAnimation>\n    : T extends SequenceAnimation\n    ? NextAnimation<SequenceAnimation>\n    : AnimatableValue | T;\n\nconst IS_NATIVE = NativeReanimatedModule.native;\n\nexport function defineAnimation<\n  T extends AnimationObject | StyleLayoutAnimation\n>(starting: AnimationToDecoration<T>, factory: () => T): T {\n  'worklet';\n  if (IN_STYLE_UPDATER) {\n    return starting as T;\n  }\n  const create = () => {\n    'worklet';\n    const animation = factory();\n    decorateAnimation<T>(animation);\n    return animation;\n  };\n\n  if (_WORKLET || !IS_NATIVE) {\n    return create();\n  }\n  // @ts-ignore: eslint-disable-line\n  return create;\n}\n\nexport function cancelAnimation<T>(sharedValue: SharedValue<T>): void {\n  'worklet';\n  // setting the current value cancels the animation if one is currently running\n  sharedValue.value = sharedValue.value; // eslint-disable-line no-self-assign\n}\n\n// TODO it should work only if there was no animation before.\nexport function withStartValue(\n  startValue: AnimatableValue,\n  animation: NextAnimation<AnimationObject>\n): Animation<AnimationObject> {\n  'worklet';\n  return defineAnimation(startValue, () => {\n    'worklet';\n    if (!_WORKLET && typeof animation === 'function') {\n      animation = animation();\n    }\n    (animation as Animation<AnimationObject>).current = startValue;\n    return animation as Animation<AnimationObject>;\n  });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}