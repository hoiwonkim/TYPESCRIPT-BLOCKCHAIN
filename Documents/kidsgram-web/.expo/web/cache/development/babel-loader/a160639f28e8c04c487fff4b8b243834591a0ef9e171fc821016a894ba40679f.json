{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Loading from \"../components/Loading\";\nimport styled from \"styled-components/native\";\nimport { useEffect, useState } from \"react\";\nimport { useSeeRecommendPhotosQuery } from \"../generated/graphql\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Container = styled.View`\n  background-color: ${function (props) {\n  return props.theme.bgColor;\n}};\n  flex: 1;\n  justify-content: center;\n  align-items: center;\n`;\nvar LoadingContainer = styled.View`\n  justify-content: center;\n  align-items: center;\n  flex: 1;\n  width: 100%;\n`;\nvar LoadingText = styled.Text`\n  color: ${function (props) {\n  return props.theme.textColor;\n}};\n  font-weight: 600;\n  margin-top: 8px;\n`;\nvar FlatListContainer = styled(FlatList)`\n  width: 100%;\n`;\nvar PhotoImage = styled.Image`\n  width: ${function (props) {\n  return props.width / 3;\n}}px;\n  height: ${function (props) {\n  return props.width / 3;\n}}px;\n`;\nvar Notification = function Notification(_ref) {\n  var navigation = _ref.navigation;\n  var _useWindowDimensions = useWindowDimensions(),\n    width = _useWindowDimensions.width;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    refreshing = _useState2[0],\n    setRefreshing = _useState2[1];\n  var _useSeeRecommendPhoto = useSeeRecommendPhotosQuery(),\n    seeRecommendPhotosData = _useSeeRecommendPhoto.data,\n    seeRecommendPhotosLoading = _useSeeRecommendPhoto.loading,\n    refetch = _useSeeRecommendPhoto.refetch;\n  var handleNavigateToPhotoScreen = function handleNavigateToPhotoScreen(photoId) {\n    navigation.navigate(\"StackPhoto\", {\n      photoId: photoId\n    });\n  };\n  var onRefresh = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      setRefreshing(true);\n      yield refetch();\n      setRefreshing(false);\n    });\n    return function onRefresh() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var renderItem = function renderItem(_ref3) {\n    var photo = _ref3.item;\n    return _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return handleNavigateToPhotoScreen(photo.id);\n      },\n      children: _jsx(PhotoImage, {\n        width: Math.ceil(width),\n        source: {\n          uri: photo.photoUrl\n        }\n      })\n    });\n  };\n  useEffect(function () {\n    navigation.setOptions({\n      headerTitle: \"추천 사진\"\n    });\n  }, []);\n  return _jsxs(Container, {\n    children: [seeRecommendPhotosLoading === true && _jsxs(LoadingContainer, {\n      children: [_jsx(Loading, {}), _jsx(LoadingText, {\n        children: \"\\uC0AC\\uC9C4 \\uB85C\\uB4DC\\uC911...\"\n      })]\n    }), seeRecommendPhotosLoading === false && (seeRecommendPhotosData == null ? void 0 : seeRecommendPhotosData.seeRecommendPhotos.photos) && _jsx(FlatListContainer, {\n      numColumns: 3,\n      refreshing: refreshing,\n      onRefresh: onRefresh,\n      data: seeRecommendPhotosData == null ? void 0 : seeRecommendPhotosData.seeRecommendPhotos.photos,\n      renderItem: renderItem,\n      keyExtractor: function keyExtractor(photo) {\n        return String(photo.id);\n      }\n    })]\n  });\n};\nexport default Notification;","map":{"version":3,"names":["Loading","styled","useEffect","useState","useSeeRecommendPhotosQuery","FlatList","TouchableOpacity","useWindowDimensions","jsx","_jsx","jsxs","_jsxs","Container","View","props","theme","bgColor","LoadingContainer","LoadingText","Text","textColor","FlatListContainer","PhotoImage","Image","width","Notification","_ref","navigation","_useWindowDimensions","_useState","_useState2","_slicedToArray","refreshing","setRefreshing","_useSeeRecommendPhoto","seeRecommendPhotosData","data","seeRecommendPhotosLoading","loading","refetch","handleNavigateToPhotoScreen","photoId","navigate","onRefresh","_ref2","_asyncToGenerator","apply","arguments","renderItem","_ref3","photo","item","onPress","id","children","Math","ceil","source","uri","photoUrl","setOptions","headerTitle","seeRecommendPhotos","photos","numColumns","keyExtractor","String"],"sources":["C:/Users/GGPC/Documents/kidsgram-web/screens/Notification.tsx"],"sourcesContent":["import Loading from \"../components/Loading\";\r\nimport styled from \"styled-components/native\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { RootStackParamList } from \"../shared/shared.types\";\r\nimport { useSeeRecommendPhotosQuery } from \"../generated/graphql\";\r\nimport { NativeStackScreenProps } from \"@react-navigation/native-stack\";\r\nimport { FlatList, ScaledSize, TouchableOpacity, useWindowDimensions } from \"react-native\";\r\n\r\ntype NotificationNavigationProps = NativeStackScreenProps<RootStackParamList, \"StackNotification\">;\r\n\r\nconst Container = styled.View`\r\n  background-color: ${(props) => props.theme.bgColor};\r\n  flex: 1;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst LoadingContainer = styled.View`\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex: 1;\r\n  width: 100%;\r\n`;\r\n\r\nconst LoadingText = styled.Text`\r\n  color: ${(props) => props.theme.textColor};\r\n  font-weight: 600;\r\n  margin-top: 8px;\r\n`;\r\n\r\nconst FlatListContainer = styled(FlatList)`\r\n  width: 100%;\r\n`;\r\n\r\nconst PhotoImage = styled.Image<{ width: number }>`\r\n  width: ${(props) => props.width / 3}px;\r\n  height: ${(props) => props.width / 3}px;\r\n`;\r\n\r\nconst Notification = ({ navigation }: NotificationNavigationProps) => {\r\n  const { width }: ScaledSize = useWindowDimensions();\r\n  const [refreshing, setRefreshing] = useState<boolean>(false);\r\n  const { data: seeRecommendPhotosData, loading: seeRecommendPhotosLoading, refetch } = useSeeRecommendPhotosQuery();\r\n\r\n  const handleNavigateToPhotoScreen = (photoId: number): void => {\r\n    navigation.navigate(\"StackPhoto\", { photoId });\r\n  };\r\n\r\n  const onRefresh = async (): Promise<void> => {\r\n    setRefreshing(true);\r\n    await refetch();\r\n    setRefreshing(false);\r\n  };\r\n\r\n  const renderItem = ({ item: photo }: any) => {\r\n    return (\r\n      <TouchableOpacity onPress={() => handleNavigateToPhotoScreen(photo.id)}>\r\n        <PhotoImage width={Math.ceil(width)} source={{ uri: photo.photoUrl }} />\r\n      </TouchableOpacity>\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    navigation.setOptions({ headerTitle: \"추천 사진\" });\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      {seeRecommendPhotosLoading === true && (\r\n        <LoadingContainer>\r\n          <Loading />\r\n          <LoadingText>사진 로드중...</LoadingText>\r\n        </LoadingContainer>\r\n      )}\r\n      {seeRecommendPhotosLoading === false && seeRecommendPhotosData?.seeRecommendPhotos.photos && (\r\n        <FlatListContainer\r\n          numColumns={3}\r\n          refreshing={refreshing}\r\n          onRefresh={onRefresh}\r\n          data={seeRecommendPhotosData?.seeRecommendPhotos.photos}\r\n          renderItem={renderItem}\r\n          keyExtractor={(photo: any) => String(photo.id)}\r\n        ></FlatListContainer>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Notification;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}