{"ast":null,"code":"import Loading from \"./Loading\";\nimport styled from \"styled-components/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar ButtonContainer = styled.TouchableOpacity`\n  padding: 15px 0px;\n  border-radius: 3px;\n  margin-bottom: 8px;\n  opacity: ${function (props) {\n  return props.disabled === true ? 0.5 : 1;\n}};\n  background-color: ${function (props) {\n  return props.bgFill === true ? props.theme.activeColor : \"transparent\";\n}};\n`;\nvar ButtonText = styled.Text`\n  text-align: center;\n  font-size: ${function (props) {\n  return props.size;\n}};\n  color: ${function (props) {\n  return props.bgFill === true ? \"white\" : props.theme.activeColor;\n}};\n`;\nvar Button = function Button(_ref) {\n  var onPress = _ref.onPress,\n    text = _ref.text,\n    size = _ref.size,\n    bgFill = _ref.bgFill,\n    loading = _ref.loading,\n    disabled = _ref.disabled;\n  return _jsx(ButtonContainer, {\n    onPress: onPress,\n    disabled: disabled,\n    bgFill: bgFill,\n    children: loading === true ? _jsx(Loading, {}) : _jsx(ButtonText, {\n      size: size,\n      bgFill: bgFill,\n      children: text\n    })\n  });\n};\nexport default Button;","map":{"version":3,"names":["Loading","styled","jsx","_jsx","ButtonContainer","TouchableOpacity","props","disabled","bgFill","theme","activeColor","ButtonText","Text","size","Button","_ref","onPress","text","loading","children"],"sources":["C:/Users/GGPC/Documents/kidsgram-web/components/Button.tsx"],"sourcesContent":["import Loading from \"./Loading\";\r\nimport styled from \"styled-components/native\";\r\n\r\ninterface ButtonProps {\r\n  onPress: () => void;\r\n  text: string;\r\n  size: string;\r\n  bgFill: boolean;\r\n  loading: boolean;\r\n  disabled: boolean;\r\n}\r\n\r\nconst ButtonContainer = styled.TouchableOpacity<{ disabled: boolean; bgFill: boolean }>`\r\n  padding: 15px 0px;\r\n  border-radius: 3px;\r\n  margin-bottom: 8px;\r\n  opacity: ${(props) => (props.disabled === true ? 0.5 : 1)};\r\n  background-color: ${(props) => (props.bgFill === true ? props.theme.activeColor : \"transparent\")};\r\n`;\r\n\r\nconst ButtonText = styled.Text<{ size: string; bgFill: boolean }>`\r\n  text-align: center;\r\n  font-size: ${(props) => props.size};\r\n  color: ${(props) => (props.bgFill === true ? \"white\" : props.theme.activeColor)};\r\n`;\r\n\r\nconst Button = ({ onPress, text, size, bgFill, loading, disabled }: ButtonProps) => {\r\n  return (\r\n    <ButtonContainer onPress={onPress} disabled={disabled} bgFill={bgFill}>\r\n      {loading === true ? (\r\n        <Loading />\r\n      ) : (\r\n        <ButtonText size={size} bgFill={bgFill}>\r\n          {text}\r\n        </ButtonText>\r\n      )}\r\n    </ButtonContainer>\r\n  );\r\n};\r\n\r\nexport default Button;"],"mappings":"AAAA,OAAOA,OAAO;AACd,OAAOC,MAAM,MAAM,0BAA0B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAW9C,IAAMC,eAAe,GAAGH,MAAM,CAACI,gBAAyD;AACxF;AACA;AACA;AACA,aAAa,UAACC,KAAK;EAAA,OAAMA,KAAK,CAACC,QAAQ,KAAK,IAAI,GAAG,GAAG,GAAG,CAAC;AAAA,CAAE;AAC5D,sBAAsB,UAACD,KAAK;EAAA,OAAMA,KAAK,CAACE,MAAM,KAAK,IAAI,GAAGF,KAAK,CAACG,KAAK,CAACC,WAAW,GAAG,aAAa;AAAA,CAAE;AACnG,CAAC;AAED,IAAMC,UAAU,GAAGV,MAAM,CAACW,IAAwC;AAClE;AACA,eAAe,UAACN,KAAK;EAAA,OAAKA,KAAK,CAACO,IAAI;AAAA,CAAC;AACrC,WAAW,UAACP,KAAK;EAAA,OAAMA,KAAK,CAACE,MAAM,KAAK,IAAI,GAAG,OAAO,GAAGF,KAAK,CAACG,KAAK,CAACC,WAAW;AAAA,CAAE;AAClF,CAAC;AAED,IAAMI,MAAM,GAAG,SAATA,MAAMA,CAAAC,IAAA,EAAwE;EAAA,IAAlEC,OAAO,GAAAD,IAAA,CAAPC,OAAO;IAAEC,IAAI,GAAAF,IAAA,CAAJE,IAAI;IAAEJ,IAAI,GAAAE,IAAA,CAAJF,IAAI;IAAEL,MAAM,GAAAO,IAAA,CAANP,MAAM;IAAEU,OAAO,GAAAH,IAAA,CAAPG,OAAO;IAAEX,QAAQ,GAAAQ,IAAA,CAARR,QAAQ;EAC9D,OACEJ,IAAA,CAACC,eAAe;IAACY,OAAO,EAAEA,OAAQ;IAACT,QAAQ,EAAEA,QAAS;IAACC,MAAM,EAAEA,MAAO;IAAAW,QAAA,EACnED,OAAO,KAAK,IAAI,GACff,IAAA,CAACH,OAAO,IAAE,CAAC,GAEXG,IAAA,CAACQ,UAAU;MAACE,IAAI,EAAEA,IAAK;MAACL,MAAM,EAAEA,MAAO;MAAAW,QAAA,EACpCF;IAAI,CACK;EACb,CACc,CAAC;AAEtB,CAAC;AAED,eAAeH,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}