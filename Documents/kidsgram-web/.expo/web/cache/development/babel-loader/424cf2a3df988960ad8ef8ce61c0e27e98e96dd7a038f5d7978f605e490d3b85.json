{"ast":null,"code":"export var Bezier = function () {\n  var _f = function _f(mX1, mY1, mX2, mY2) {\n    var NEWTON_ITERATIONS = 4;\n    var NEWTON_MIN_SLOPE = 0.001;\n    var SUBDIVISION_PRECISION = 0.0000001;\n    var SUBDIVISION_MAX_ITERATIONS = 10;\n    var kSplineTableSize = 11;\n    var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\n    var A = function () {\n      var _f = function _f(aA1, aA2) {\n        return 1.0 - 3.0 * aA2 + 3.0 * aA1;\n      };\n      _f._closure = {};\n      _f.asString = \"function A(aA1,aA2){return 1.0-3.0*aA2+3.0*aA1;}\";\n      _f.__workletHash = 7696928702327;\n      _f.__location = \"C:\\\\Users\\\\GGPC\\\\Documents\\\\kidsgram-web\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\Bezier.js (15:4)\";\n      global.__reanimatedWorkletInit(_f);\n      return _f;\n    }();\n    var B = function () {\n      var _f = function _f(aA1, aA2) {\n        return 3.0 * aA2 - 6.0 * aA1;\n      };\n      _f._closure = {};\n      _f.asString = \"function B(aA1,aA2){return 3.0*aA2-6.0*aA1;}\";\n      _f.__workletHash = 3169786778773;\n      _f.__location = \"C:\\\\Users\\\\GGPC\\\\Documents\\\\kidsgram-web\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\Bezier.js (19:4)\";\n      global.__reanimatedWorkletInit(_f);\n      return _f;\n    }();\n    var C = function () {\n      var _f = function _f(aA1) {\n        return 3.0 * aA1;\n      };\n      _f._closure = {};\n      _f.asString = \"function C(aA1){return 3.0*aA1;}\";\n      _f.__workletHash = 6399610653367;\n      _f.__location = \"C:\\\\Users\\\\GGPC\\\\Documents\\\\kidsgram-web\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\Bezier.js (23:4)\";\n      global.__reanimatedWorkletInit(_f);\n      return _f;\n    }();\n    var calcBezier = function () {\n      var _f = function _f(aT, aA1, aA2) {\n        return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;\n      };\n      _f._closure = {\n        A: A,\n        B: B,\n        C: C\n      };\n      _f.asString = \"function calcBezier(aT,aA1,aA2){const{A,B,C}=jsThis._closure;{return((A(aA1,aA2)*aT+B(aA1,aA2))*aT+C(aA1))*aT;}}\";\n      _f.__workletHash = 3153137150968;\n      _f.__location = \"C:\\\\Users\\\\GGPC\\\\Documents\\\\kidsgram-web\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\Bezier.js (28:4)\";\n      global.__reanimatedWorkletInit(_f);\n      return _f;\n    }();\n    var getSlope = function () {\n      var _f = function _f(aT, aA1, aA2) {\n        return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\n      };\n      _f._closure = {\n        A: A,\n        B: B,\n        C: C\n      };\n      _f.asString = \"function getSlope(aT,aA1,aA2){const{A,B,C}=jsThis._closure;{return 3.0*A(aA1,aA2)*aT*aT+2.0*B(aA1,aA2)*aT+C(aA1);}}\";\n      _f.__workletHash = 17050227570308;\n      _f.__location = \"C:\\\\Users\\\\GGPC\\\\Documents\\\\kidsgram-web\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\Bezier.js (33:4)\";\n      global.__reanimatedWorkletInit(_f);\n      return _f;\n    }();\n    var binarySubdivide = function () {\n      var _f = function _f(aX, aA, aB, mX1, mX2) {\n        var currentX;\n        var currentT;\n        var i = 0;\n        do {\n          currentT = aA + (aB - aA) / 2.0;\n          currentX = calcBezier(currentT, mX1, mX2) - aX;\n          if (currentX > 0.0) {\n            aB = currentT;\n          } else {\n            aA = currentT;\n          }\n        } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\n        return currentT;\n      };\n      _f._closure = {\n        SUBDIVISION_PRECISION: SUBDIVISION_PRECISION,\n        SUBDIVISION_MAX_ITERATIONS: SUBDIVISION_MAX_ITERATIONS,\n        calcBezier: calcBezier\n      };\n      _f.asString = \"function binarySubdivide(aX,aA,aB,mX1,mX2){const{SUBDIVISION_PRECISION,SUBDIVISION_MAX_ITERATIONS,calcBezier}=jsThis._closure;{var currentX;var currentT;var i=0;do{currentT=aA+(aB-aA)/2.0;currentX=calcBezier(currentT,mX1,mX2)-aX;if(currentX>0.0){aB=currentT;}else{aA=currentT;}}while(Math.abs(currentX)>SUBDIVISION_PRECISION&&++i<SUBDIVISION_MAX_ITERATIONS);return currentT;}}\";\n      _f.__workletHash = 8216390185547;\n      _f.__location = \"C:\\\\Users\\\\GGPC\\\\Documents\\\\kidsgram-web\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\Bezier.js (37:4)\";\n      global.__reanimatedWorkletInit(_f);\n      return _f;\n    }();\n    var newtonRaphsonIterate = function () {\n      var _f = function _f(aX, aGuessT, mX1, mX2) {\n        for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\n          var currentSlope = getSlope(aGuessT, mX1, mX2);\n          if (currentSlope === 0.0) {\n            return aGuessT;\n          }\n          var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n          aGuessT -= currentX / currentSlope;\n        }\n        return aGuessT;\n      };\n      _f._closure = {\n        NEWTON_ITERATIONS: NEWTON_ITERATIONS,\n        getSlope: getSlope,\n        calcBezier: calcBezier\n      };\n      _f.asString = \"function newtonRaphsonIterate(aX,aGuessT,mX1,mX2){const{NEWTON_ITERATIONS,getSlope,calcBezier}=jsThis._closure;{for(var i=0;i<NEWTON_ITERATIONS;++i){var currentSlope=getSlope(aGuessT,mX1,mX2);if(currentSlope===0.0){return aGuessT;}var currentX=calcBezier(aGuessT,mX1,mX2)-aX;aGuessT-=currentX/currentSlope;}return aGuessT;}}\";\n      _f.__workletHash = 5901993849860;\n      _f.__location = \"C:\\\\Users\\\\GGPC\\\\Documents\\\\kidsgram-web\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\Bezier.js (55:4)\";\n      global.__reanimatedWorkletInit(_f);\n      return _f;\n    }();\n    var LinearEasing = function () {\n      var _f = function _f(x) {\n        return x;\n      };\n      _f._closure = {};\n      _f.asString = \"function LinearEasing(x){return x;}\";\n      _f.__workletHash = 3962143445177;\n      _f.__location = \"C:\\\\Users\\\\GGPC\\\\Documents\\\\kidsgram-web\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\Bezier.js (67:4)\";\n      global.__reanimatedWorkletInit(_f);\n      return _f;\n    }();\n    if (!(mX1 >= 0 && mX1 <= 1 && mX2 >= 0 && mX2 <= 1)) {\n      throw new Error('bezier x values must be in [0, 1] range');\n    }\n    if (mX1 === mY1 && mX2 === mY2) {\n      return LinearEasing;\n    }\n    var sampleValues = new Array(kSplineTableSize);\n    for (var i = 0; i < kSplineTableSize; ++i) {\n      sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n    }\n    var getTForX = function () {\n      var _f = function _f(aX) {\n        var intervalStart = 0.0;\n        var currentSample = 1;\n        var lastSample = kSplineTableSize - 1;\n        for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n          intervalStart += kSampleStepSize;\n        }\n        --currentSample;\n        var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n        var guessForT = intervalStart + dist * kSampleStepSize;\n        var initialSlope = getSlope(guessForT, mX1, mX2);\n        if (initialSlope >= NEWTON_MIN_SLOPE) {\n          return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n        } else if (initialSlope === 0.0) {\n          return guessForT;\n        } else {\n          return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n        }\n      };\n      _f._closure = {\n        kSplineTableSize: kSplineTableSize,\n        sampleValues: sampleValues,\n        kSampleStepSize: kSampleStepSize,\n        getSlope: getSlope,\n        mX1: mX1,\n        mX2: mX2,\n        NEWTON_MIN_SLOPE: NEWTON_MIN_SLOPE,\n        newtonRaphsonIterate: newtonRaphsonIterate,\n        binarySubdivide: binarySubdivide\n      };\n      _f.asString = \"function getTForX(aX){const{kSplineTableSize,sampleValues,kSampleStepSize,getSlope,mX1,mX2,NEWTON_MIN_SLOPE,newtonRaphsonIterate,binarySubdivide}=jsThis._closure;{var intervalStart=0.0;var currentSample=1;var lastSample=kSplineTableSize-1;for(;currentSample!==lastSample&&sampleValues[currentSample]<=aX;++currentSample){intervalStart+=kSampleStepSize;}--currentSample;var dist=(aX-sampleValues[currentSample])/(sampleValues[currentSample+1]-sampleValues[currentSample]);var guessForT=intervalStart+dist*kSampleStepSize;var initialSlope=getSlope(guessForT,mX1,mX2);if(initialSlope>=NEWTON_MIN_SLOPE){return newtonRaphsonIterate(aX,guessForT,mX1,mX2);}else if(initialSlope===0.0){return guessForT;}else{return binarySubdivide(aX,intervalStart,intervalStart+kSampleStepSize,mX1,mX2);}}}\";\n      _f.__workletHash = 10148290284160;\n      _f.__location = \"C:\\\\Users\\\\GGPC\\\\Documents\\\\kidsgram-web\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\Bezier.js (88:4)\";\n      global.__reanimatedWorkletInit(_f);\n      return _f;\n    }();\n    return function () {\n      var _f = function _f(x) {\n        if (mX1 === mY1 && mX2 === mY2) {\n          return x;\n        }\n        if (x === 0) {\n          return 0;\n        }\n        if (x === 1) {\n          return 1;\n        }\n        return calcBezier(getTForX(x), mY1, mY2);\n      };\n      _f._closure = {\n        mX1: mX1,\n        mY1: mY1,\n        mX2: mX2,\n        mY2: mY2,\n        calcBezier: calcBezier,\n        getTForX: getTForX\n      };\n      _f.asString = \"function BezierEasing(x){const{mX1,mY1,mX2,mY2,calcBezier,getTForX}=jsThis._closure;{if(mX1===mY1&&mX2===mY2){return x;}if(x===0){return 0;}if(x===1){return 1;}return calcBezier(getTForX(x),mY1,mY2);}}\";\n      _f.__workletHash = 8676971518933;\n      _f.__location = \"C:\\\\Users\\\\GGPC\\\\Documents\\\\kidsgram-web\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\Bezier.js (112:11)\";\n      global.__reanimatedWorkletInit(_f);\n      return _f;\n    }();\n  };\n  _f._closure = {};\n  _f.asString = \"function Bezier(mX1,mY1,mX2,mY2){var NEWTON_ITERATIONS=4;var NEWTON_MIN_SLOPE=0.001;var SUBDIVISION_PRECISION=0.0000001;var SUBDIVISION_MAX_ITERATIONS=10;var kSplineTableSize=11;var kSampleStepSize=1.0/(kSplineTableSize-1.0);var A=function(){var _f=function _f(aA1,aA2){return 1.0-3.0*aA2+3.0*aA1;};_f._closure={};_f.asString=\\\"function A(aA1,aA2){return 1.0-3.0*aA2+3.0*aA1;}\\\";_f.__workletHash=7696928702327;_f.__location=\\\"C:\\\\\\\\Users\\\\\\\\GGPC\\\\\\\\Documents\\\\\\\\kidsgram-web\\\\\\\\node_modules\\\\\\\\react-native-reanimated\\\\\\\\lib\\\\\\\\reanimated2\\\\\\\\Bezier.js (15:4)\\\";global.__reanimatedWorkletInit(_f);return _f;}();var B=function(){var _f=function _f(aA1,aA2){return 3.0*aA2-6.0*aA1;};_f._closure={};_f.asString=\\\"function B(aA1,aA2){return 3.0*aA2-6.0*aA1;}\\\";_f.__workletHash=3169786778773;_f.__location=\\\"C:\\\\\\\\Users\\\\\\\\GGPC\\\\\\\\Documents\\\\\\\\kidsgram-web\\\\\\\\node_modules\\\\\\\\react-native-reanimated\\\\\\\\lib\\\\\\\\reanimated2\\\\\\\\Bezier.js (19:4)\\\";global.__reanimatedWorkletInit(_f);return _f;}();var C=function(){var _f=function _f(aA1){return 3.0*aA1;};_f._closure={};_f.asString=\\\"function C(aA1){return 3.0*aA1;}\\\";_f.__workletHash=6399610653367;_f.__location=\\\"C:\\\\\\\\Users\\\\\\\\GGPC\\\\\\\\Documents\\\\\\\\kidsgram-web\\\\\\\\node_modules\\\\\\\\react-native-reanimated\\\\\\\\lib\\\\\\\\reanimated2\\\\\\\\Bezier.js (23:4)\\\";global.__reanimatedWorkletInit(_f);return _f;}();var calcBezier=function(){var _f=function _f(aT,aA1,aA2){return((A(aA1,aA2)*aT+B(aA1,aA2))*aT+C(aA1))*aT;};_f._closure={A:A,B:B,C:C};_f.asString=\\\"function calcBezier(aT,aA1,aA2){const{A,B,C}=jsThis._closure;{return((A(aA1,aA2)*aT+B(aA1,aA2))*aT+C(aA1))*aT;}}\\\";_f.__workletHash=3153137150968;_f.__location=\\\"C:\\\\\\\\Users\\\\\\\\GGPC\\\\\\\\Documents\\\\\\\\kidsgram-web\\\\\\\\node_modules\\\\\\\\react-native-reanimated\\\\\\\\lib\\\\\\\\reanimated2\\\\\\\\Bezier.js (28:4)\\\";global.__reanimatedWorkletInit(_f);return _f;}();var getSlope=function(){var _f=function _f(aT,aA1,aA2){return 3.0*A(aA1,aA2)*aT*aT+2.0*B(aA1,aA2)*aT+C(aA1);};_f._closure={A:A,B:B,C:C};_f.asString=\\\"function getSlope(aT,aA1,aA2){const{A,B,C}=jsThis._closure;{return 3.0*A(aA1,aA2)*aT*aT+2.0*B(aA1,aA2)*aT+C(aA1);}}\\\";_f.__workletHash=17050227570308;_f.__location=\\\"C:\\\\\\\\Users\\\\\\\\GGPC\\\\\\\\Documents\\\\\\\\kidsgram-web\\\\\\\\node_modules\\\\\\\\react-native-reanimated\\\\\\\\lib\\\\\\\\reanimated2\\\\\\\\Bezier.js (33:4)\\\";global.__reanimatedWorkletInit(_f);return _f;}();var binarySubdivide=function(){var _f=function _f(aX,aA,aB,mX1,mX2){var currentX;var currentT;var i=0;do{currentT=aA+(aB-aA)/2.0;currentX=calcBezier(currentT,mX1,mX2)-aX;if(currentX>0.0){aB=currentT;}else{aA=currentT;}}while(Math.abs(currentX)>SUBDIVISION_PRECISION&&++i<SUBDIVISION_MAX_ITERATIONS);return currentT;};_f._closure={SUBDIVISION_PRECISION:SUBDIVISION_PRECISION,SUBDIVISION_MAX_ITERATIONS:SUBDIVISION_MAX_ITERATIONS,calcBezier:calcBezier};_f.asString=\\\"function binarySubdivide(aX,aA,aB,mX1,mX2){const{SUBDIVISION_PRECISION,SUBDIVISION_MAX_ITERATIONS,calcBezier}=jsThis._closure;{var currentX;var currentT;var i=0;do{currentT=aA+(aB-aA)/2.0;currentX=calcBezier(currentT,mX1,mX2)-aX;if(currentX>0.0){aB=currentT;}else{aA=currentT;}}while(Math.abs(currentX)>SUBDIVISION_PRECISION&&++i<SUBDIVISION_MAX_ITERATIONS);return currentT;}}\\\";_f.__workletHash=8216390185547;_f.__location=\\\"C:\\\\\\\\Users\\\\\\\\GGPC\\\\\\\\Documents\\\\\\\\kidsgram-web\\\\\\\\node_modules\\\\\\\\react-native-reanimated\\\\\\\\lib\\\\\\\\reanimated2\\\\\\\\Bezier.js (37:4)\\\";global.__reanimatedWorkletInit(_f);return _f;}();var newtonRaphsonIterate=function(){var _f=function _f(aX,aGuessT,mX1,mX2){for(var i=0;i<NEWTON_ITERATIONS;++i){var currentSlope=getSlope(aGuessT,mX1,mX2);if(currentSlope===0.0){return aGuessT;}var currentX=calcBezier(aGuessT,mX1,mX2)-aX;aGuessT-=currentX/currentSlope;}return aGuessT;};_f._closure={NEWTON_ITERATIONS:NEWTON_ITERATIONS,getSlope:getSlope,calcBezier:calcBezier};_f.asString=\\\"function newtonRaphsonIterate(aX,aGuessT,mX1,mX2){const{NEWTON_ITERATIONS,getSlope,calcBezier}=jsThis._closure;{for(var i=0;i<NEWTON_ITERATIONS;++i){var currentSlope=getSlope(aGuessT,mX1,mX2);if(currentSlope===0.0){return aGuessT;}var currentX=calcBezier(aGuessT,mX1,mX2)-aX;aGuessT-=currentX/currentSlope;}return aGuessT;}}\\\";_f.__workletHash=5901993849860;_f.__location=\\\"C:\\\\\\\\Users\\\\\\\\GGPC\\\\\\\\Documents\\\\\\\\kidsgram-web\\\\\\\\node_modules\\\\\\\\react-native-reanimated\\\\\\\\lib\\\\\\\\reanimated2\\\\\\\\Bezier.js (55:4)\\\";global.__reanimatedWorkletInit(_f);return _f;}();var LinearEasing=function(){var _f=function _f(x){return x;};_f._closure={};_f.asString=\\\"function LinearEasing(x){return x;}\\\";_f.__workletHash=3962143445177;_f.__location=\\\"C:\\\\\\\\Users\\\\\\\\GGPC\\\\\\\\Documents\\\\\\\\kidsgram-web\\\\\\\\node_modules\\\\\\\\react-native-reanimated\\\\\\\\lib\\\\\\\\reanimated2\\\\\\\\Bezier.js (67:4)\\\";global.__reanimatedWorkletInit(_f);return _f;}();if(!(mX1>=0&&mX1<=1&&mX2>=0&&mX2<=1)){throw new Error('bezier x values must be in [0, 1] range');}if(mX1===mY1&&mX2===mY2){return LinearEasing;}var sampleValues=new Array(kSplineTableSize);for(var i=0;i<kSplineTableSize;++i){sampleValues[i]=calcBezier(i*kSampleStepSize,mX1,mX2);}var getTForX=function(){var _f=function _f(aX){var intervalStart=0.0;var currentSample=1;var lastSample=kSplineTableSize-1;for(;currentSample!==lastSample&&sampleValues[currentSample]<=aX;++currentSample){intervalStart+=kSampleStepSize;}--currentSample;var dist=(aX-sampleValues[currentSample])/(sampleValues[currentSample+1]-sampleValues[currentSample]);var guessForT=intervalStart+dist*kSampleStepSize;var initialSlope=getSlope(guessForT,mX1,mX2);if(initialSlope>=NEWTON_MIN_SLOPE){return newtonRaphsonIterate(aX,guessForT,mX1,mX2);}else if(initialSlope===0.0){return guessForT;}else{return binarySubdivide(aX,intervalStart,intervalStart+kSampleStepSize,mX1,mX2);}};_f._closure={kSplineTableSize:kSplineTableSize,sampleValues:sampleValues,kSampleStepSize:kSampleStepSize,getSlope:getSlope,mX1:mX1,mX2:mX2,NEWTON_MIN_SLOPE:NEWTON_MIN_SLOPE,newtonRaphsonIterate:newtonRaphsonIterate,binarySubdivide:binarySubdivide};_f.asString=\\\"function getTForX(aX){const{kSplineTableSize,sampleValues,kSampleStepSize,getSlope,mX1,mX2,NEWTON_MIN_SLOPE,newtonRaphsonIterate,binarySubdivide}=jsThis._closure;{var intervalStart=0.0;var currentSample=1;var lastSample=kSplineTableSize-1;for(;currentSample!==lastSample&&sampleValues[currentSample]<=aX;++currentSample){intervalStart+=kSampleStepSize;}--currentSample;var dist=(aX-sampleValues[currentSample])/(sampleValues[currentSample+1]-sampleValues[currentSample]);var guessForT=intervalStart+dist*kSampleStepSize;var initialSlope=getSlope(guessForT,mX1,mX2);if(initialSlope>=NEWTON_MIN_SLOPE){return newtonRaphsonIterate(aX,guessForT,mX1,mX2);}else if(initialSlope===0.0){return guessForT;}else{return binarySubdivide(aX,intervalStart,intervalStart+kSampleStepSize,mX1,mX2);}}}\\\";_f.__workletHash=10148290284160;_f.__location=\\\"C:\\\\\\\\Users\\\\\\\\GGPC\\\\\\\\Documents\\\\\\\\kidsgram-web\\\\\\\\node_modules\\\\\\\\react-native-reanimated\\\\\\\\lib\\\\\\\\reanimated2\\\\\\\\Bezier.js (88:4)\\\";global.__reanimatedWorkletInit(_f);return _f;}();return function(){var _f=function _f(x){if(mX1===mY1&&mX2===mY2){return x;}if(x===0){return 0;}if(x===1){return 1;}return calcBezier(getTForX(x),mY1,mY2);};_f._closure={mX1:mX1,mY1:mY1,mX2:mX2,mY2:mY2,calcBezier:calcBezier,getTForX:getTForX};_f.asString=\\\"function BezierEasing(x){const{mX1,mY1,mX2,mY2,calcBezier,getTForX}=jsThis._closure;{if(mX1===mY1&&mX2===mY2){return x;}if(x===0){return 0;}if(x===1){return 1;}return calcBezier(getTForX(x),mY1,mY2);}}\\\";_f.__workletHash=8676971518933;_f.__location=\\\"C:\\\\\\\\Users\\\\\\\\GGPC\\\\\\\\Documents\\\\\\\\kidsgram-web\\\\\\\\node_modules\\\\\\\\react-native-reanimated\\\\\\\\lib\\\\\\\\reanimated2\\\\\\\\Bezier.js (112:11)\\\";global.__reanimatedWorkletInit(_f);return _f;}();}\";\n  _f.__workletHash = 12529784257918;\n  _f.__location = \"C:\\\\Users\\\\GGPC\\\\Documents\\\\kidsgram-web\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\Bezier.js (7:7)\";\n  global.__reanimatedWorkletInit(_f);\n  return _f;\n}();","map":{"version":3,"names":["Bezier","_f","mX1","mY1","mX2","mY2","NEWTON_ITERATIONS","NEWTON_MIN_SLOPE","SUBDIVISION_PRECISION","SUBDIVISION_MAX_ITERATIONS","kSplineTableSize","kSampleStepSize","A","aA1","aA2","_closure","asString","__workletHash","__location","global","__reanimatedWorkletInit","B","C","calcBezier","aT","getSlope","binarySubdivide","aX","aA","aB","currentX","currentT","i","Math","abs","newtonRaphsonIterate","aGuessT","currentSlope","LinearEasing","x","Error","sampleValues","Array","getTForX","intervalStart","currentSample","lastSample","dist","guessForT","initialSlope"],"sources":["C:/Users/GGPC/Documents/kidsgram-web/node_modules/react-native-reanimated/lib/reanimated2/Bezier.js"],"sourcesContent":["/**\n * https://github.com/gre/bezier-easing\n * BezierEasing - use bezier curve for transition easing function\n * by Gaëtan Renaudeau 2014 - 2015 – MIT License\n */\n// These values are established by empiricism with tests (tradeoff: performance VS precision)\nexport function Bezier(mX1, mY1, mX2, mY2) {\n    'worklet';\n    const NEWTON_ITERATIONS = 4;\n    const NEWTON_MIN_SLOPE = 0.001;\n    const SUBDIVISION_PRECISION = 0.0000001;\n    const SUBDIVISION_MAX_ITERATIONS = 10;\n    const kSplineTableSize = 11;\n    const kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\n    function A(aA1, aA2) {\n        'worklet';\n        return 1.0 - 3.0 * aA2 + 3.0 * aA1;\n    }\n    function B(aA1, aA2) {\n        'worklet';\n        return 3.0 * aA2 - 6.0 * aA1;\n    }\n    function C(aA1) {\n        'worklet';\n        return 3.0 * aA1;\n    }\n    // Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\n    function calcBezier(aT, aA1, aA2) {\n        'worklet';\n        return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;\n    }\n    // Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\n    function getSlope(aT, aA1, aA2) {\n        'worklet';\n        return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\n    }\n    function binarySubdivide(aX, aA, aB, mX1, mX2) {\n        'worklet';\n        let currentX;\n        let currentT;\n        let i = 0;\n        do {\n            currentT = aA + (aB - aA) / 2.0;\n            currentX = calcBezier(currentT, mX1, mX2) - aX;\n            if (currentX > 0.0) {\n                aB = currentT;\n            }\n            else {\n                aA = currentT;\n            }\n        } while (Math.abs(currentX) > SUBDIVISION_PRECISION &&\n            ++i < SUBDIVISION_MAX_ITERATIONS);\n        return currentT;\n    }\n    function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\n        'worklet';\n        for (let i = 0; i < NEWTON_ITERATIONS; ++i) {\n            const currentSlope = getSlope(aGuessT, mX1, mX2);\n            if (currentSlope === 0.0) {\n                return aGuessT;\n            }\n            const currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n            aGuessT -= currentX / currentSlope;\n        }\n        return aGuessT;\n    }\n    function LinearEasing(x) {\n        'worklet';\n        return x;\n    }\n    if (!(mX1 >= 0 && mX1 <= 1 && mX2 >= 0 && mX2 <= 1)) {\n        throw new Error('bezier x values must be in [0, 1] range');\n    }\n    if (mX1 === mY1 && mX2 === mY2) {\n        return LinearEasing;\n    }\n    // FIXME: Float32Array is not available in Hermes right now\n    //\n    // var float32ArraySupported = typeof Float32Array === 'function';\n    // const sampleValues = float32ArraySupported\n    // ? new Float32Array(kSplineTableSize)\n    // : new Array(kSplineTableSize);\n    // Precompute samples table\n    const sampleValues = new Array(kSplineTableSize);\n    for (let i = 0; i < kSplineTableSize; ++i) {\n        sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n    }\n    function getTForX(aX) {\n        'worklet';\n        let intervalStart = 0.0;\n        let currentSample = 1;\n        const lastSample = kSplineTableSize - 1;\n        for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n            intervalStart += kSampleStepSize;\n        }\n        --currentSample;\n        // Interpolate to provide an initial guess for t\n        const dist = (aX - sampleValues[currentSample]) /\n            (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n        const guessForT = intervalStart + dist * kSampleStepSize;\n        const initialSlope = getSlope(guessForT, mX1, mX2);\n        if (initialSlope >= NEWTON_MIN_SLOPE) {\n            return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n        }\n        else if (initialSlope === 0.0) {\n            return guessForT;\n        }\n        else {\n            return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n        }\n    }\n    return function BezierEasing(x) {\n        'worklet';\n        if (mX1 === mY1 && mX2 === mY2) {\n            return x; // linear\n        }\n        // Because JavaScript number are imprecise, we should guarantee the extremes are right.\n        if (x === 0) {\n            return 0;\n        }\n        if (x === 1) {\n            return 1;\n        }\n        return calcBezier(getTForX(x), mY1, mY2);\n    };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}