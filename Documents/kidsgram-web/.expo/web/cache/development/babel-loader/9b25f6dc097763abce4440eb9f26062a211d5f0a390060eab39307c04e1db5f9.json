{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9;\nimport CreatedAt from \"./CreatedAt\";\nimport styled from \"styled-components/native\";\nimport { useNavigation } from \"@react-navigation/core\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar RoomContainer = styled.TouchableOpacity(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  background-color: \", \";\\n  padding: 10px;\\n  flex-direction: row;\\n  justify-content: space-between;\\n  align-items: center;\\n\"])), function (props) {\n  return props.theme.bgColor;\n});\nvar RoomUserContainer = styled.View(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  flex-direction: row;\\n  justify-content: space-between;\\n  align-items: center;\\n\"])));\nvar Avatar = styled.Image(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n  width: 40px;\\n  height: 40px;\\n  border-radius: 25px;\\n  margin-right: 10px;\\n\"])));\nvar Data = styled.View(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose([\"\"])));\nvar Username = styled.Text(_templateObject5 || (_templateObject5 = _taggedTemplateLiteralLoose([\"\\n  color: \", \";\\n  font-weight: 600;\\n  font-size: 16px;\\n\"])), function (props) {\n  return props.theme.textColor;\n});\nvar UnreadText = styled.Text(_templateObject6 || (_templateObject6 = _taggedTemplateLiteralLoose([\"\\n  color: gray;\\n  margin-top: 3px;\\n  font-weight: normal;\\n  font-size: 13px;\\n\"])));\nvar RoomInfoContainer = styled.View(_templateObject7 || (_templateObject7 = _taggedTemplateLiteralLoose([\"\\n  align-items: flex-end;\\n\"])));\nvar TotalUnreadMessagesContainer = styled.View(_templateObject8 || (_templateObject8 = _taggedTemplateLiteralLoose([\"\\n  background-color: #f25747;\\n  width: 17px;\\n  height: 17px;\\n  border-radius: 50px;\\n  margin-top: 5px;\\n  justify-content: center;\\n  align-items: center;\\n\"])));\nvar TotalUnreadMessages = styled.Text(_templateObject9 || (_templateObject9 = _taggedTemplateLiteralLoose([\"\\n  color: white;\\n\"])));\nvar RoomItem = function RoomItem(_ref) {\n  var id = _ref.id,\n    users = _ref.users,\n    messages = _ref.messages,\n    totalUnreadMessages = _ref.totalUnreadMessages,\n    otherUser = _ref.otherUser,\n    latestMessage = _ref.latestMessage,\n    createdAt = _ref.createdAt,\n    updatedAt = _ref.updatedAt;\n  var navigation = useNavigation();\n  var handleNavigateToRoomScreen = function handleNavigateToRoomScreen() {\n    navigation.navigate(\"StackRoom\", {\n      id: id,\n      otherUser: otherUser\n    });\n  };\n  return _jsxs(RoomContainer, {\n    onPress: handleNavigateToRoomScreen,\n    children: [_jsxs(RoomUserContainer, {\n      children: [otherUser.avatarUrl ? _jsx(Avatar, {\n        source: {\n          uri: otherUser.avatarUrl\n        }\n      }) : _jsx(Avatar, {\n        source: require(\"../assets/basic_user.jpeg\")\n      }), _jsxs(Data, {\n        children: [_jsx(Username, {\n          children: otherUser.username\n        }), _jsx(UnreadText, {\n          children: latestMessage == null ? void 0 : latestMessage.text\n        })]\n      })]\n    }), _jsxs(RoomInfoContainer, {\n      children: [(latestMessage == null ? void 0 : latestMessage.createdAt) && _jsx(CreatedAt, {\n        createdAt: latestMessage == null ? void 0 : latestMessage.createdAt\n      }), _jsx(TotalUnreadMessagesContainer, {\n        children: totalUnreadMessages > 0 && _jsx(TotalUnreadMessages, {\n          children: totalUnreadMessages\n        })\n      })]\n    })]\n  });\n};\nexport default RoomItem;","map":{"version":3,"names":["CreatedAt","styled","useNavigation","jsx","_jsx","jsxs","_jsxs","RoomContainer","TouchableOpacity","_templateObject","_taggedTemplateLiteralLoose","props","theme","bgColor","RoomUserContainer","View","_templateObject2","Avatar","Image","_templateObject3","Data","_templateObject4","Username","Text","_templateObject5","textColor","UnreadText","_templateObject6","RoomInfoContainer","_templateObject7","TotalUnreadMessagesContainer","_templateObject8","TotalUnreadMessages","_templateObject9","RoomItem","_ref","id","users","messages","totalUnreadMessages","otherUser","latestMessage","createdAt","updatedAt","navigation","handleNavigateToRoomScreen","navigate","onPress","children","avatarUrl","source","uri","require","username","text"],"sources":["C:/Users/GGPC/Documents/kidsgram-web/components/RoomItem.tsx"],"sourcesContent":["import CreatedAt from \"./CreatedAt\";\r\nimport styled from \"styled-components/native\";\r\nimport { useNavigation } from \"@react-navigation/core\";\r\nimport { RootStackParamList } from \"../shared/shared.types\";\r\nimport { NativeStackNavigationProp } from \"@react-navigation/native-stack\";\r\n\r\ntype RoomItemNavigationProps = NativeStackNavigationProp<RootStackParamList>;\r\n\r\ninterface RoomItemProps {\r\n  id: number;\r\n  users: any;\r\n  messages: any;\r\n  totalUnreadMessages: number;\r\n  otherUser: any;\r\n  latestMessage?: {\r\n    __typename: string;\r\n    id: number;\r\n    text: string;\r\n    createdAt: string;\r\n  };\r\n  createdAt: string;\r\n  updatedAt: string;\r\n}\r\n\r\nconst RoomContainer = styled.TouchableOpacity`\r\n  background-color: ${(props) => props.theme.bgColor};\r\n  padding: 10px;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst RoomUserContainer = styled.View`\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst Avatar = styled.Image`\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 25px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst Data = styled.View``;\r\n\r\nconst Username = styled.Text`\r\n  color: ${(props) => props.theme.textColor};\r\n  font-weight: 600;\r\n  font-size: 16px;\r\n`;\r\n\r\nconst UnreadText = styled.Text`\r\n  color: gray;\r\n  margin-top: 3px;\r\n  font-weight: normal;\r\n  font-size: 13px;\r\n`;\r\n\r\nconst RoomInfoContainer = styled.View`\r\n  align-items: flex-end;\r\n`;\r\n\r\nconst TotalUnreadMessagesContainer = styled.View`\r\n  background-color: #f25747;\r\n  width: 17px;\r\n  height: 17px;\r\n  border-radius: 50px;\r\n  margin-top: 5px;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst TotalUnreadMessages = styled.Text`\r\n  color: white;\r\n`;\r\n\r\nconst RoomItem = ({ id, users, messages, totalUnreadMessages, otherUser, latestMessage, createdAt, updatedAt }: RoomItemProps) => {\r\n  const navigation = useNavigation<RoomItemNavigationProps>();\r\n\r\n  const handleNavigateToRoomScreen = (): void => {\r\n    navigation.navigate(\"StackRoom\", { id, otherUser });\r\n  };\r\n\r\n  return (\r\n    <RoomContainer onPress={handleNavigateToRoomScreen}>\r\n      <RoomUserContainer>\r\n        {otherUser.avatarUrl ? <Avatar source={{ uri: otherUser.avatarUrl }}></Avatar> : <Avatar source={require(\"../assets/basic_user.jpeg\")} />}\r\n        <Data>\r\n          <Username>{otherUser.username}</Username>\r\n          <UnreadText>{latestMessage?.text}</UnreadText>\r\n        </Data>\r\n      </RoomUserContainer>\r\n      <RoomInfoContainer>\r\n        {latestMessage?.createdAt && <CreatedAt createdAt={latestMessage?.createdAt} />}\r\n        <TotalUnreadMessagesContainer>{totalUnreadMessages > 0 && <TotalUnreadMessages>{totalUnreadMessages}</TotalUnreadMessages>}</TotalUnreadMessagesContainer>\r\n      </RoomInfoContainer>\r\n    </RoomContainer>\r\n  );\r\n};\r\n\r\nexport default RoomItem;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}