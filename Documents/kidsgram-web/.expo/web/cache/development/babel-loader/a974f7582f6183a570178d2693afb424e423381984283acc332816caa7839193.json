{"ast":null,"code":"import Feed from \"../screens/Feed\";\nimport Likes from \"../screens/Likes\";\nimport Photo from \"../screens/Photo\";\nimport Search from \"../screens/Search\";\nimport Comments from \"../screens/Comments\";\nimport styled from \"styled-components/native\";\nimport Notification from \"../screens/Notification\";\nimport ProfileNavigation from \"./ProfileNavigation\";\nimport useLoggedInUser from \"../hooks/useLoggedInUser\";\nimport { isDarkModeVar } from \"../apollo\";\nimport { useReactiveVar } from \"@apollo/client\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar LogoContainer = styled.View`\n  height: 100px;\n`;\nvar LogoImage = styled.Image`\n  width: 130px;\n  height: 100%;\n`;\nvar StackNavigation = function StackNavigation(_ref) {\n  var screenName = _ref.screenName;\n  var isDarkMode = useReactiveVar(isDarkModeVar);\n  var loggedInUser = useLoggedInUser();\n  return _jsxs(Stack.Navigator, {\n    screenOptions: {\n      presentation: \"transparentModal\",\n      headerBackTitleVisible: false,\n      headerTintColor: isDarkMode === \"dark\" ? \"white\" : \"black\",\n      headerStyle: {\n        backgroundColor: isDarkMode === \"dark\" ? \"rgb(6,6,6)\" : \"rgb(250,250,250)\",\n        shadowColor: \"gray\"\n      }\n    },\n    children: [screenName === \"StackFeed\" ? _jsx(Stack.Screen, {\n      name: \"StackFeed\",\n      component: Feed,\n      options: {\n        headerTitle: function headerTitle() {\n          return _jsx(LogoContainer, {\n            children: isDarkMode === \"dark\" ? _jsx(LogoImage, {\n              source: require(\"../assets/instagram_logo_dark.png\"),\n              resizeMode: \"contain\"\n            }) : _jsx(LogoImage, {\n              source: require(\"../assets/instagram_logo_light.png\"),\n              resizeMode: \"contain\"\n            })\n          });\n        }\n      }\n    }) : null, screenName === \"StackSearch\" ? _jsx(Stack.Screen, {\n      name: \"StackSearch\",\n      component: Search\n    }) : null, screenName === \"StackNotification\" ? _jsx(Stack.Screen, {\n      name: \"StackNotification\",\n      component: Notification\n    }) : null, screenName === \"StackProfileNavigation\" ? _jsx(Stack.Screen, {\n      name: \"StackProfileNavigation\",\n      component: ProfileNavigation,\n      initialParams: {\n        id: loggedInUser == null ? void 0 : loggedInUser.id,\n        username: loggedInUser == null ? void 0 : loggedInUser.username,\n        name: loggedInUser == null ? void 0 : loggedInUser.name,\n        avatarUrl: loggedInUser == null ? void 0 : loggedInUser.avatarUrl,\n        isFollowing: false,\n        isMe: loggedInUser == null ? void 0 : loggedInUser.isMe\n      }\n    }) : null, _jsx(Stack.Screen, {\n      name: \"StackPhoto\",\n      component: Photo\n    }), _jsx(Stack.Screen, {\n      name: \"StackLikes\",\n      component: Likes\n    }), _jsx(Stack.Screen, {\n      name: \"StackComments\",\n      component: Comments\n    })]\n  });\n};\nexport default StackNavigation;","map":{"version":3,"names":["Feed","Likes","Photo","Search","Comments","styled","Notification","ProfileNavigation","useLoggedInUser","isDarkModeVar","useReactiveVar","createStackNavigator","jsx","_jsx","jsxs","_jsxs","Stack","LogoContainer","View","LogoImage","Image","StackNavigation","_ref","screenName","isDarkMode","loggedInUser","Navigator","screenOptions","presentation","headerBackTitleVisible","headerTintColor","headerStyle","backgroundColor","shadowColor","children","Screen","name","component","options","headerTitle","source","require","resizeMode","initialParams","id","username","avatarUrl","isFollowing","isMe"],"sources":["C:/Users/GGPC/Documents/kidsgram-web/navigators/StackNavigation.tsx"],"sourcesContent":["import Feed from \"../screens/Feed\";\r\nimport Likes from \"../screens/Likes\";\r\nimport Photo from \"../screens/Photo\";\r\nimport Search from \"../screens/Search\";\r\nimport Comments from \"../screens/Comments\";\r\nimport styled from \"styled-components/native\";\r\nimport Notification from \"../screens/Notification\";\r\nimport ProfileNavigation from \"./ProfileNavigation\";\r\nimport useLoggedInUser from \"../hooks/useLoggedInUser\";\r\nimport { isDarkModeVar } from \"../apollo\";\r\nimport { useReactiveVar } from \"@apollo/client\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\n\r\ninterface StackNavigationProps {\r\n  screenName: string;\r\n}\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nconst LogoContainer = styled.View`\r\n  height: 100px;\r\n`;\r\n\r\nconst LogoImage = styled.Image`\r\n  width: 130px;\r\n  height: 100%;\r\n`;\r\n\r\nconst StackNavigation = ({ screenName }: StackNavigationProps) => {\r\n  const isDarkMode: \"light\" | \"dark\" = useReactiveVar(isDarkModeVar);\r\n  const loggedInUser = useLoggedInUser();\r\n\r\n  return (\r\n    <Stack.Navigator\r\n      screenOptions={{\r\n        presentation: \"transparentModal\",\r\n        headerBackTitleVisible: false,\r\n        headerTintColor: isDarkMode === \"dark\" ? \"white\" : \"black\",\r\n        headerStyle: { backgroundColor: isDarkMode === \"dark\" ? \"rgb(6,6,6)\" : \"rgb(250,250,250)\", shadowColor: \"gray\" },\r\n      }}\r\n    >\r\n      {screenName === \"StackFeed\" ? (\r\n        <Stack.Screen\r\n          name=\"StackFeed\"\r\n          component={Feed}\r\n          options={{\r\n            headerTitle: () => (\r\n              <LogoContainer>\r\n                {isDarkMode === \"dark\" ? (\r\n                  <LogoImage source={require(\"../assets/instagram_logo_dark.png\")} resizeMode=\"contain\"></LogoImage>\r\n                ) : (\r\n                  <LogoImage source={require(\"../assets/instagram_logo_light.png\")} resizeMode=\"contain\"></LogoImage>\r\n                )}\r\n              </LogoContainer>\r\n            ),\r\n          }}\r\n        ></Stack.Screen>\r\n      ) : null}\r\n      {screenName === \"StackSearch\" ? <Stack.Screen name=\"StackSearch\" component={Search}></Stack.Screen> : null}\r\n      {screenName === \"StackNotification\" ? <Stack.Screen name=\"StackNotification\" component={Notification}></Stack.Screen> : null}\r\n      {screenName === \"StackProfileNavigation\" ? (\r\n        <Stack.Screen\r\n          name=\"StackProfileNavigation\"\r\n          component={ProfileNavigation}\r\n          initialParams={{\r\n            id: loggedInUser?.id,\r\n            username: loggedInUser?.username,\r\n            name: loggedInUser?.name,\r\n            avatarUrl: loggedInUser?.avatarUrl,\r\n            isFollowing: false,\r\n            isMe: loggedInUser?.isMe,\r\n          }}\r\n        ></Stack.Screen>\r\n      ) : null}\r\n      <Stack.Screen name=\"StackPhoto\" component={Photo}></Stack.Screen>\r\n      <Stack.Screen name=\"StackLikes\" component={Likes}></Stack.Screen>\r\n      <Stack.Screen name=\"StackComments\" component={Comments}></Stack.Screen>\r\n    </Stack.Navigator>\r\n  );\r\n};\r\n\r\nexport default StackNavigation;"],"mappings":"AAAA,OAAOA,IAAI;AACX,OAAOC,KAAK;AACZ,OAAOC,KAAK;AACZ,OAAOC,MAAM;AACb,OAAOC,QAAQ;AACf,OAAOC,MAAM,MAAM,0BAA0B;AAC7C,OAAOC,YAAY;AACnB,OAAOC,iBAAiB;AACxB,OAAOC,eAAe;AACtB,SAASC,aAAa;AACtB,SAASC,cAAc,QAAQ,gBAAgB;AAC/C,SAASC,oBAAoB,QAAQ,yBAAyB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAM/D,IAAMC,KAAK,GAAGL,oBAAoB,CAAC,CAAC;AAEpC,IAAMM,aAAa,GAAGZ,MAAM,CAACa,IAAK;AAClC;AACA,CAAC;AAED,IAAMC,SAAS,GAAGd,MAAM,CAACe,KAAM;AAC/B;AACA;AACA,CAAC;AAED,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAAC,IAAA,EAA6C;EAAA,IAAvCC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EACnC,IAAMC,UAA4B,GAAGd,cAAc,CAACD,aAAa,CAAC;EAClE,IAAMgB,YAAY,GAAGjB,eAAe,CAAC,CAAC;EAEtC,OACEO,KAAA,CAACC,KAAK,CAACU,SAAS;IACdC,aAAa,EAAE;MACbC,YAAY,EAAE,kBAAkB;MAChCC,sBAAsB,EAAE,KAAK;MAC7BC,eAAe,EAAEN,UAAU,KAAK,MAAM,GAAG,OAAO,GAAG,OAAO;MAC1DO,WAAW,EAAE;QAAEC,eAAe,EAAER,UAAU,KAAK,MAAM,GAAG,YAAY,GAAG,kBAAkB;QAAES,WAAW,EAAE;MAAO;IACjH,CAAE;IAAAC,QAAA,GAEDX,UAAU,KAAK,WAAW,GACzBV,IAAA,CAACG,KAAK,CAACmB,MAAM;MACXC,IAAI,EAAC,WAAW;MAChBC,SAAS,EAAErC,IAAK;MAChBsC,OAAO,EAAE;QACPC,WAAW,EAAE,SAAAA,YAAA;UAAA,OACX1B,IAAA,CAACI,aAAa;YAAAiB,QAAA,EACXV,UAAU,KAAK,MAAM,GACpBX,IAAA,CAACM,SAAS;cAACqB,MAAM,EAAEC,OAAO,oCAAoC,CAAE;cAACC,UAAU,EAAC;YAAS,CAAY,CAAC,GAElG7B,IAAA,CAACM,SAAS;cAACqB,MAAM,EAAEC,OAAO,qCAAqC,CAAE;cAACC,UAAU,EAAC;YAAS,CAAY;UACnG,CACY,CAAC;QAAA;MAEpB;IAAE,CACW,CAAC,GACd,IAAI,EACPnB,UAAU,KAAK,aAAa,GAAGV,IAAA,CAACG,KAAK,CAACmB,MAAM;MAACC,IAAI,EAAC,aAAa;MAACC,SAAS,EAAElC;IAAO,CAAe,CAAC,GAAG,IAAI,EACzGoB,UAAU,KAAK,mBAAmB,GAAGV,IAAA,CAACG,KAAK,CAACmB,MAAM;MAACC,IAAI,EAAC,mBAAmB;MAACC,SAAS,EAAE/B;IAAa,CAAe,CAAC,GAAG,IAAI,EAC3HiB,UAAU,KAAK,wBAAwB,GACtCV,IAAA,CAACG,KAAK,CAACmB,MAAM;MACXC,IAAI,EAAC,wBAAwB;MAC7BC,SAAS,EAAE9B,iBAAkB;MAC7BoC,aAAa,EAAE;QACbC,EAAE,EAAEnB,YAAY,oBAAZA,YAAY,CAAEmB,EAAE;QACpBC,QAAQ,EAAEpB,YAAY,oBAAZA,YAAY,CAAEoB,QAAQ;QAChCT,IAAI,EAAEX,YAAY,oBAAZA,YAAY,CAAEW,IAAI;QACxBU,SAAS,EAAErB,YAAY,oBAAZA,YAAY,CAAEqB,SAAS;QAClCC,WAAW,EAAE,KAAK;QAClBC,IAAI,EAAEvB,YAAY,oBAAZA,YAAY,CAAEuB;MACtB;IAAE,CACW,CAAC,GACd,IAAI,EACRnC,IAAA,CAACG,KAAK,CAACmB,MAAM;MAACC,IAAI,EAAC,YAAY;MAACC,SAAS,EAAEnC;IAAM,CAAe,CAAC,EACjEW,IAAA,CAACG,KAAK,CAACmB,MAAM;MAACC,IAAI,EAAC,YAAY;MAACC,SAAS,EAAEpC;IAAM,CAAe,CAAC,EACjEY,IAAA,CAACG,KAAK,CAACmB,MAAM;MAACC,IAAI,EAAC,eAAe;MAACC,SAAS,EAAEjC;IAAS,CAAe,CAAC;EAAA,CACxD,CAAC;AAEtB,CAAC;AAED,eAAeiB,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}