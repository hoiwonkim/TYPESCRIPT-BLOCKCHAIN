{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6;\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport Loading from \"../components/Loading\";\nimport styled from \"styled-components/native\";\nimport KeyboardAvoidingLayout from \"../components/KeyboardAvoidingLayout\";\nimport { useEffect } from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { ReactNativeFile } from \"apollo-upload-client\";\nimport { useUploadPhotoMutation } from \"../generated/graphql\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Container = styled.View(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  flex: 1;\\n  background-color: \", \";\\n\"])), function (props) {\n  return props.theme.bgColor;\n});\nvar Photo = styled.Image(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  flex: 0.9;\\n  flex: 1;\\n\"])));\nvar CaptionContainer = styled.View(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n  margin-top: 10px;\\n  padding: 0 20px;\\n  position: absolute;\\n  bottom: 50px;\\n  width: 100%;\\n\"])));\nvar CaptionTextInput = styled.TextInput(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose([\"\\n  background-color: \", \";\\n  padding: 12px 20px;\\n  padding-left: 10px;\\n  border-radius: 5px;\\n\"])), function (props) {\n  return props.theme.inputBgColor;\n});\nvar HeaderRightContainer = styled.TouchableOpacity(_templateObject5 || (_templateObject5 = _taggedTemplateLiteralLoose([\"\\n  padding: 10px 12px;\\n\"])));\nvar HeaderRightText = styled.Text(_templateObject6 || (_templateObject6 = _taggedTemplateLiteralLoose([\"\\n  font-size: 17px;\\n  color: \", \";\\n  font-weight: bold;\\n\"])), function (props) {\n  return props.theme.activeColor;\n});\nvar UploadPhotoNavigation = function UploadPhotoNavigation(_ref) {\n  var _route$params2;\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var _useForm = useForm(),\n    control = _useForm.control,\n    handleSubmit = _useForm.handleSubmit,\n    getValues = _useForm.getValues;\n  var _useUploadPhotoMutati = useUploadPhotoMutation({\n      update: function update(cache, _ref2) {\n        var data = _ref2.data;\n        if ((data == null ? void 0 : data.uploadPhoto.ok) === true) {\n          cache.modify({\n            id: \"ROOT_QUERY\",\n            fields: {\n              seeFeed: function seeFeed(prev) {\n                var result = _objectSpread(_objectSpread({}, prev), {}, {\n                  photos: [data.uploadPhoto.photo].concat(_toConsumableArray(prev.photos))\n                });\n                return result;\n              }\n            }\n          });\n          navigation.navigate(\"StackTabNavigation\");\n        }\n      }\n    }),\n    _useUploadPhotoMutati2 = _slicedToArray(_useUploadPhotoMutati, 2),\n    uploadPhotoMutation = _useUploadPhotoMutati2[0],\n    uploadPhotoLoading = _useUploadPhotoMutati2[1].loading;\n  var onValid = function onValid() {\n    var _route$params;\n    var _getValues = getValues(),\n      text = _getValues.text;\n    if (text === \"\") {\n      return;\n    }\n    var file = new ReactNativeFile({\n      uri: (_route$params = route.params) == null ? void 0 : _route$params.photoUri,\n      name: Date.now() + \".jpg\",\n      type: \"image/jpeg\"\n    });\n    uploadPhotoMutation({\n      variables: {\n        photo: file,\n        caption: text\n      }\n    });\n  };\n  useEffect(function () {\n    navigation.setOptions(_objectSpread(_objectSpread({}, uploadPhotoLoading === true && {\n      headerLeft: function headerLeft() {\n        return null;\n      }\n    }), {}, {\n      headerRight: function headerRight() {\n        return _jsx(HeaderRightContainer, {\n          onPress: handleSubmit(onValid),\n          children: uploadPhotoLoading === true ? _jsx(Loading, {}) : _jsx(HeaderRightText, {\n            children: \"\\uC5C5\\uB85C\\uB4DC\"\n          })\n        });\n      }\n    }));\n  }, [uploadPhotoLoading]);\n  return _jsx(KeyboardAvoidingLayout, {\n    children: _jsxs(Container, {\n      children: [_jsx(Photo, {\n        source: {\n          uri: (_route$params2 = route.params) == null ? void 0 : _route$params2.photoUri\n        }\n      }), _jsx(CaptionContainer, {\n        children: _jsx(Controller, {\n          name: \"text\",\n          control: control,\n          rules: {\n            required: true,\n            minLength: 1,\n            maxLength: 100\n          },\n          render: function render(_ref3) {\n            var _ref3$field = _ref3.field,\n              onChange = _ref3$field.onChange,\n              value = _ref3$field.value;\n            return _jsx(CaptionTextInput, {\n              value: value,\n              onChangeText: onChange,\n              onSubmitEditing: handleSubmit(onValid),\n              keyboardType: \"email-address\",\n              autoCapitalize: \"none\",\n              autoCorrect: false,\n              returnKeyType: \"done\",\n              placeholder: \"\\uC0AC\\uC9C4\\uC5D0 \\uB300\\uD55C \\uC124\\uBA85\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n              placeholderTextColor: \"gray\",\n              blurOnSubmit: false,\n              maxLength: 100\n            });\n          }\n        })\n      })]\n    })\n  });\n};\nexport default UploadPhotoNavigation;","map":{"version":3,"names":["Loading","styled","KeyboardAvoidingLayout","useEffect","useForm","Controller","ReactNativeFile","useUploadPhotoMutation","jsx","_jsx","jsxs","_jsxs","Container","View","_templateObject","_taggedTemplateLiteralLoose","props","theme","bgColor","Photo","Image","_templateObject2","CaptionContainer","_templateObject3","CaptionTextInput","TextInput","_templateObject4","inputBgColor","HeaderRightContainer","TouchableOpacity","_templateObject5","HeaderRightText","Text","_templateObject6","activeColor","UploadPhotoNavigation","_ref","_route$params2","navigation","route","_useForm","control","handleSubmit","getValues","_useUploadPhotoMutati","update","cache","_ref2","data","uploadPhoto","ok","modify","id","fields","seeFeed","prev","result","_objectSpread","photos","photo","concat","_toConsumableArray","navigate","_useUploadPhotoMutati2","_slicedToArray","uploadPhotoMutation","uploadPhotoLoading","loading","onValid","_route$params","_getValues","text","file","uri","params","photoUri","name","Date","now","type","variables","caption","setOptions","headerLeft","headerRight","onPress","children","source","rules","required","minLength","maxLength","render","_ref3","_ref3$field","field","onChange","value","onChangeText","onSubmitEditing","keyboardType","autoCapitalize","autoCorrect","returnKeyType","placeholder","placeholderTextColor","blurOnSubmit"],"sources":["C:/Users/GGPC/Documents/kidsgram-web/navigators/UploadPhotoNavigation.tsx"],"sourcesContent":["import Loading from \"../components/Loading\";\r\nimport styled from \"styled-components/native\";\r\nimport KeyboardAvoidingLayout from \"../components/KeyboardAvoidingLayout\";\r\nimport { useEffect } from \"react\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { ReactNativeFile } from \"apollo-upload-client\";\r\nimport { RootStackParamList } from \"../shared/shared.types\";\r\nimport { useUploadPhotoMutation } from \"../generated/graphql\";\r\nimport { NativeStackScreenProps } from \"@react-navigation/native-stack\";\r\n\r\ntype UploadPhotoNavigationProps = NativeStackScreenProps<RootStackParamList, \"StackUploadPhotoNavigation\">;\r\n\r\ninterface UploadPhotoFormData {\r\n  text: string;\r\n}\r\n\r\nconst Container = styled.View`\r\n  flex: 1;\r\n  background-color: ${(props) => props.theme.bgColor};\r\n`;\r\n\r\nconst Photo = styled.Image`\r\n  flex: 0.9;\r\n  flex: 1;\r\n`;\r\n\r\nconst CaptionContainer = styled.View`\r\n  margin-top: 10px;\r\n  padding: 0 20px;\r\n  position: absolute;\r\n  bottom: 50px;\r\n  width: 100%;\r\n`;\r\n\r\nconst CaptionTextInput = styled.TextInput`\r\n  background-color: ${(props) => props.theme.inputBgColor};\r\n  padding: 12px 20px;\r\n  padding-left: 10px;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst HeaderRightContainer = styled.TouchableOpacity`\r\n  padding: 10px 12px;\r\n`;\r\n\r\nconst HeaderRightText = styled.Text`\r\n  font-size: 17px;\r\n  color: ${(props) => props.theme.activeColor};\r\n  font-weight: bold;\r\n`;\r\n\r\nconst UploadPhotoNavigation = ({ navigation, route }: UploadPhotoNavigationProps) => {\r\n  const { control, handleSubmit, getValues } = useForm<UploadPhotoFormData>();\r\n  const [uploadPhotoMutation, { loading: uploadPhotoLoading }] = useUploadPhotoMutation({\r\n    update: (cache, { data }) => {\r\n      if (data?.uploadPhoto.ok === true) {\r\n        cache.modify({\r\n          id: \"ROOT_QUERY\",\r\n          fields: {\r\n            seeFeed(prev) {\r\n              const result = { ...prev, photos: [data.uploadPhoto.photo, ...prev.photos] };\r\n              return result;\r\n            },\r\n          },\r\n        });\r\n        navigation.navigate(\"StackTabNavigation\");\r\n      }\r\n    },\r\n  });\r\n\r\n  const onValid = (): void => {\r\n    const { text } = getValues();\r\n    if (text === \"\") {\r\n      return;\r\n    }\r\n    const file: ReactNativeFile = new ReactNativeFile({\r\n      uri: route.params?.photoUri,\r\n      name: `${Date.now()}.jpg`,\r\n      type: \"image/jpeg\",\r\n    });\r\n    uploadPhotoMutation({ variables: { photo: file, caption: text } });\r\n  };\r\n\r\n  useEffect(() => {\r\n    navigation.setOptions({\r\n      ...(uploadPhotoLoading === true && { headerLeft: () => null }),\r\n      headerRight: () => {\r\n        return <HeaderRightContainer onPress={handleSubmit(onValid)}>{uploadPhotoLoading === true ? <Loading /> : <HeaderRightText>업로드</HeaderRightText>}</HeaderRightContainer>;\r\n      },\r\n    });\r\n  }, [uploadPhotoLoading]);\r\n\r\n  return (\r\n    <KeyboardAvoidingLayout>\r\n      <Container>\r\n        <Photo source={{ uri: route.params?.photoUri }}></Photo>\r\n        <CaptionContainer>\r\n          <Controller\r\n            name=\"text\"\r\n            control={control}\r\n            rules={{ required: true, minLength: 1, maxLength: 100 }}\r\n            render={({ field: { onChange, value } }) => (\r\n              <CaptionTextInput\r\n                value={value}\r\n                onChangeText={onChange}\r\n                onSubmitEditing={handleSubmit(onValid)}\r\n                keyboardType=\"email-address\"\r\n                autoCapitalize=\"none\"\r\n                autoCorrect={false}\r\n                returnKeyType=\"done\"\r\n                placeholder=\"사진에 대한 설명을 입력해주세요.\"\r\n                placeholderTextColor=\"gray\"\r\n                blurOnSubmit={false}\r\n                maxLength={100}\r\n              ></CaptionTextInput>\r\n            )}\r\n          ></Controller>\r\n        </CaptionContainer>\r\n      </Container>\r\n    </KeyboardAvoidingLayout>\r\n  );\r\n};\r\n\r\nexport default UploadPhotoNavigation;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}