{"ast":null,"code":"import TabNavigation from \"./TabNavigation\";\nimport RoomsNavigation from \"./RoomsNavigation\";\nimport PhotoNavigation from \"./PhotoNavigation\";\nimport ProfileNavigation from \"./ProfileNavigation\";\nimport UploadPhotoNavigation from \"./UploadPhotoNavigation\";\nimport { isDarkModeVar } from \"../apollo\";\nimport { useReactiveVar } from \"@apollo/client\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar LoggedInNav = function LoggedInNav() {\n  var isDarkMode = useReactiveVar(isDarkModeVar);\n  return _jsxs(Stack.Navigator, {\n    screenOptions: {\n      presentation: \"card\"\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"StackTabNavigation\",\n      component: TabNavigation,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"StackPhotoNavigation\",\n      component: PhotoNavigation,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"StackUploadPhotoNavigation\",\n      component: UploadPhotoNavigation,\n      options: {\n        headerTitle: \"사진 업로드\",\n        headerBackTitleVisible: false,\n        headerStyle: {\n          backgroundColor: isDarkMode === \"light\" ? \"white\" : \"black\"\n        },\n        headerTintColor: isDarkMode === \"light\" ? \"black\" : \"white\"\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"StackRoomsNavigation\",\n      component: RoomsNavigation,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"StackProfileNavigation\",\n      component: ProfileNavigation\n    })]\n  });\n};\nexport default LoggedInNav;","map":{"version":3,"names":["TabNavigation","RoomsNavigation","PhotoNavigation","ProfileNavigation","UploadPhotoNavigation","isDarkModeVar","useReactiveVar","createStackNavigator","jsx","_jsx","jsxs","_jsxs","Stack","LoggedInNav","isDarkMode","Navigator","screenOptions","presentation","children","Screen","name","component","options","headerShown","headerTitle","headerBackTitleVisible","headerStyle","backgroundColor","headerTintColor"],"sources":["C:/Users/GGPC/Documents/kidsgram-web/navigators/LoggedInNavigation.tsx"],"sourcesContent":["import TabNavigation from \"./TabNavigation\";\r\nimport RoomsNavigation from \"./RoomsNavigation\";\r\nimport PhotoNavigation from \"./PhotoNavigation\";\r\nimport ProfileNavigation from \"./ProfileNavigation\";\r\nimport UploadPhotoNavigation from \"./UploadPhotoNavigation\";\r\nimport { isDarkModeVar } from \"../apollo\";\r\nimport { useReactiveVar } from \"@apollo/client\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nconst LoggedInNav = () => {\r\n  const isDarkMode: \"light\" | \"dark\" = useReactiveVar(isDarkModeVar);\r\n\r\n  return (\r\n    <Stack.Navigator screenOptions={{ presentation: \"card\" }}>\r\n      <Stack.Screen name=\"StackTabNavigation\" component={TabNavigation} options={{ headerShown: false }} />\r\n      <Stack.Screen name=\"StackPhotoNavigation\" component={PhotoNavigation} options={{ headerShown: false }} />\r\n      <Stack.Screen\r\n        name=\"StackUploadPhotoNavigation\"\r\n        component={UploadPhotoNavigation}\r\n        options={{\r\n          headerTitle: \"사진 업로드\",\r\n          headerBackTitleVisible: false,\r\n          headerStyle: { backgroundColor: isDarkMode === \"light\" ? \"white\" : \"black\" },\r\n          headerTintColor: isDarkMode === \"light\" ? \"black\" : \"white\",\r\n        }}\r\n      />\r\n      <Stack.Screen name=\"StackRoomsNavigation\" component={RoomsNavigation} options={{ headerShown: false }} />\r\n      <Stack.Screen name=\"StackProfileNavigation\" component={ProfileNavigation} />\r\n    </Stack.Navigator>\r\n  );\r\n};\r\n\r\nexport default LoggedInNav;"],"mappings":"AAAA,OAAOA,aAAa;AACpB,OAAOC,eAAe;AACtB,OAAOC,eAAe;AACtB,OAAOC,iBAAiB;AACxB,OAAOC,qBAAqB;AAC5B,SAASC,aAAa;AACtB,SAASC,cAAc,QAAQ,gBAAgB;AAC/C,SAASC,oBAAoB,QAAQ,yBAAyB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE/D,IAAMC,KAAK,GAAGL,oBAAoB,CAAC,CAAC;AAEpC,IAAMM,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;EACxB,IAAMC,UAA4B,GAAGR,cAAc,CAACD,aAAa,CAAC;EAElE,OACEM,KAAA,CAACC,KAAK,CAACG,SAAS;IAACC,aAAa,EAAE;MAAEC,YAAY,EAAE;IAAO,CAAE;IAAAC,QAAA,GACvDT,IAAA,CAACG,KAAK,CAACO,MAAM;MAACC,IAAI,EAAC,oBAAoB;MAACC,SAAS,EAAErB,aAAc;MAACsB,OAAO,EAAE;QAAEC,WAAW,EAAE;MAAM;IAAE,CAAE,CAAC,EACrGd,IAAA,CAACG,KAAK,CAACO,MAAM;MAACC,IAAI,EAAC,sBAAsB;MAACC,SAAS,EAAEnB,eAAgB;MAACoB,OAAO,EAAE;QAAEC,WAAW,EAAE;MAAM;IAAE,CAAE,CAAC,EACzGd,IAAA,CAACG,KAAK,CAACO,MAAM;MACXC,IAAI,EAAC,4BAA4B;MACjCC,SAAS,EAAEjB,qBAAsB;MACjCkB,OAAO,EAAE;QACPE,WAAW,EAAE,QAAQ;QACrBC,sBAAsB,EAAE,KAAK;QAC7BC,WAAW,EAAE;UAAEC,eAAe,EAAEb,UAAU,KAAK,OAAO,GAAG,OAAO,GAAG;QAAQ,CAAC;QAC5Ec,eAAe,EAAEd,UAAU,KAAK,OAAO,GAAG,OAAO,GAAG;MACtD;IAAE,CACH,CAAC,EACFL,IAAA,CAACG,KAAK,CAACO,MAAM;MAACC,IAAI,EAAC,sBAAsB;MAACC,SAAS,EAAEpB,eAAgB;MAACqB,OAAO,EAAE;QAAEC,WAAW,EAAE;MAAM;IAAE,CAAE,CAAC,EACzGd,IAAA,CAACG,KAAK,CAACO,MAAM;MAACC,IAAI,EAAC,wBAAwB;MAACC,SAAS,EAAElB;IAAkB,CAAE,CAAC;EAAA,CAC7D,CAAC;AAEtB,CAAC;AAED,eAAeU,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}