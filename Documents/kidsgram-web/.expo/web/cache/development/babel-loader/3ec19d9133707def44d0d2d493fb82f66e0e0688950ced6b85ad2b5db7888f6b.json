{"ast":null,"code":"import { Reanimated } from \"./reanimatedWrapper\";\nimport { State } from \"../../State\";\nexport var GestureStateManager = {\n  create: function () {\n    var _f = function _f(handlerTag) {\n      return {\n        begin: function () {\n          var _f = function _f() {\n            if (Reanimated) {\n              Reanimated.setGestureState(handlerTag, State.BEGAN);\n            } else {\n              console.warn('react-native-reanimated is required in order to use synchronous state management');\n            }\n          };\n          _f._closure = {\n            Reanimated: Reanimated,\n            handlerTag: handlerTag,\n            State: {\n              BEGAN: State.BEGAN\n            }\n          };\n          _f.asString = \"function begin(){const{Reanimated,handlerTag,State}=jsThis._closure;{if(Reanimated){Reanimated.setGestureState(handlerTag,State.BEGAN);}else{console.warn('react-native-reanimated is required in order to use synchronous state management');}}}\";\n          _f.__workletHash = 5592744355385;\n          _f.__location = \"C:\\\\Users\\\\GGPC\\\\Documents\\\\kidsgram-web\\\\node_modules\\\\react-native-gesture-handler\\\\lib\\\\module\\\\handlers\\\\gestures\\\\gestureStateManager.js (8:13)\";\n          global.__reanimatedWorkletInit(_f);\n          return _f;\n        }(),\n        activate: function () {\n          var _f = function _f() {\n            if (Reanimated) {\n              Reanimated.setGestureState(handlerTag, State.ACTIVE);\n            } else {\n              console.warn('react-native-reanimated is required in order to use synchronous state management');\n            }\n          };\n          _f._closure = {\n            Reanimated: Reanimated,\n            handlerTag: handlerTag,\n            State: {\n              ACTIVE: State.ACTIVE\n            }\n          };\n          _f.asString = \"function activate(){const{Reanimated,handlerTag,State}=jsThis._closure;{if(Reanimated){Reanimated.setGestureState(handlerTag,State.ACTIVE);}else{console.warn('react-native-reanimated is required in order to use synchronous state management');}}}\";\n          _f.__workletHash = 14578985412132;\n          _f.__location = \"C:\\\\Users\\\\GGPC\\\\Documents\\\\kidsgram-web\\\\node_modules\\\\react-native-gesture-handler\\\\lib\\\\module\\\\handlers\\\\gestures\\\\gestureStateManager.js (17:16)\";\n          global.__reanimatedWorkletInit(_f);\n          return _f;\n        }(),\n        fail: function () {\n          var _f = function _f() {\n            if (Reanimated) {\n              Reanimated.setGestureState(handlerTag, State.FAILED);\n            } else {\n              console.warn('react-native-reanimated is required in order to use synchronous state management');\n            }\n          };\n          _f._closure = {\n            Reanimated: Reanimated,\n            handlerTag: handlerTag,\n            State: {\n              FAILED: State.FAILED\n            }\n          };\n          _f.asString = \"function fail(){const{Reanimated,handlerTag,State}=jsThis._closure;{if(Reanimated){Reanimated.setGestureState(handlerTag,State.FAILED);}else{console.warn('react-native-reanimated is required in order to use synchronous state management');}}}\";\n          _f.__workletHash = 14327088908112;\n          _f.__location = \"C:\\\\Users\\\\GGPC\\\\Documents\\\\kidsgram-web\\\\node_modules\\\\react-native-gesture-handler\\\\lib\\\\module\\\\handlers\\\\gestures\\\\gestureStateManager.js (26:12)\";\n          global.__reanimatedWorkletInit(_f);\n          return _f;\n        }(),\n        end: function () {\n          var _f = function _f() {\n            if (Reanimated) {\n              Reanimated.setGestureState(handlerTag, State.END);\n            } else {\n              console.warn('react-native-reanimated is required in order to use synchronous state management');\n            }\n          };\n          _f._closure = {\n            Reanimated: Reanimated,\n            handlerTag: handlerTag,\n            State: {\n              END: State.END\n            }\n          };\n          _f.asString = \"function end(){const{Reanimated,handlerTag,State}=jsThis._closure;{if(Reanimated){Reanimated.setGestureState(handlerTag,State.END);}else{console.warn('react-native-reanimated is required in order to use synchronous state management');}}}\";\n          _f.__workletHash = 16769257690097;\n          _f.__location = \"C:\\\\Users\\\\GGPC\\\\Documents\\\\kidsgram-web\\\\node_modules\\\\react-native-gesture-handler\\\\lib\\\\module\\\\handlers\\\\gestures\\\\gestureStateManager.js (35:11)\";\n          global.__reanimatedWorkletInit(_f);\n          return _f;\n        }()\n      };\n    };\n    _f._closure = {\n      Reanimated: Reanimated,\n      State: {\n        BEGAN: State.BEGAN,\n        ACTIVE: State.ACTIVE,\n        FAILED: State.FAILED,\n        END: State.END\n      }\n    };\n    _f.asString = \"function create(handlerTag){const{Reanimated,State}=jsThis._closure;{return{begin:function(){var _f=function _f(){if(Reanimated){Reanimated.setGestureState(handlerTag,State.BEGAN);}else{console.warn('react-native-reanimated is required in order to use synchronous state management');}};_f._closure={Reanimated:Reanimated,handlerTag:handlerTag,State:{BEGAN:State.BEGAN}};_f.asString=\\\"function begin(){const{Reanimated,handlerTag,State}=jsThis._closure;{if(Reanimated){Reanimated.setGestureState(handlerTag,State.BEGAN);}else{console.warn('react-native-reanimated is required in order to use synchronous state management');}}}\\\";_f.__workletHash=5592744355385;_f.__location=\\\"C:\\\\\\\\Users\\\\\\\\GGPC\\\\\\\\Documents\\\\\\\\kidsgram-web\\\\\\\\node_modules\\\\\\\\react-native-gesture-handler\\\\\\\\lib\\\\\\\\module\\\\\\\\handlers\\\\\\\\gestures\\\\\\\\gestureStateManager.js (8:13)\\\";global.__reanimatedWorkletInit(_f);return _f;}(),activate:function(){var _f=function _f(){if(Reanimated){Reanimated.setGestureState(handlerTag,State.ACTIVE);}else{console.warn('react-native-reanimated is required in order to use synchronous state management');}};_f._closure={Reanimated:Reanimated,handlerTag:handlerTag,State:{ACTIVE:State.ACTIVE}};_f.asString=\\\"function activate(){const{Reanimated,handlerTag,State}=jsThis._closure;{if(Reanimated){Reanimated.setGestureState(handlerTag,State.ACTIVE);}else{console.warn('react-native-reanimated is required in order to use synchronous state management');}}}\\\";_f.__workletHash=14578985412132;_f.__location=\\\"C:\\\\\\\\Users\\\\\\\\GGPC\\\\\\\\Documents\\\\\\\\kidsgram-web\\\\\\\\node_modules\\\\\\\\react-native-gesture-handler\\\\\\\\lib\\\\\\\\module\\\\\\\\handlers\\\\\\\\gestures\\\\\\\\gestureStateManager.js (17:16)\\\";global.__reanimatedWorkletInit(_f);return _f;}(),fail:function(){var _f=function _f(){if(Reanimated){Reanimated.setGestureState(handlerTag,State.FAILED);}else{console.warn('react-native-reanimated is required in order to use synchronous state management');}};_f._closure={Reanimated:Reanimated,handlerTag:handlerTag,State:{FAILED:State.FAILED}};_f.asString=\\\"function fail(){const{Reanimated,handlerTag,State}=jsThis._closure;{if(Reanimated){Reanimated.setGestureState(handlerTag,State.FAILED);}else{console.warn('react-native-reanimated is required in order to use synchronous state management');}}}\\\";_f.__workletHash=14327088908112;_f.__location=\\\"C:\\\\\\\\Users\\\\\\\\GGPC\\\\\\\\Documents\\\\\\\\kidsgram-web\\\\\\\\node_modules\\\\\\\\react-native-gesture-handler\\\\\\\\lib\\\\\\\\module\\\\\\\\handlers\\\\\\\\gestures\\\\\\\\gestureStateManager.js (26:12)\\\";global.__reanimatedWorkletInit(_f);return _f;}(),end:function(){var _f=function _f(){if(Reanimated){Reanimated.setGestureState(handlerTag,State.END);}else{console.warn('react-native-reanimated is required in order to use synchronous state management');}};_f._closure={Reanimated:Reanimated,handlerTag:handlerTag,State:{END:State.END}};_f.asString=\\\"function end(){const{Reanimated,handlerTag,State}=jsThis._closure;{if(Reanimated){Reanimated.setGestureState(handlerTag,State.END);}else{console.warn('react-native-reanimated is required in order to use synchronous state management');}}}\\\";_f.__workletHash=16769257690097;_f.__location=\\\"C:\\\\\\\\Users\\\\\\\\GGPC\\\\\\\\Documents\\\\\\\\kidsgram-web\\\\\\\\node_modules\\\\\\\\react-native-gesture-handler\\\\\\\\lib\\\\\\\\module\\\\\\\\handlers\\\\\\\\gestures\\\\\\\\gestureStateManager.js (35:11)\\\";global.__reanimatedWorkletInit(_f);return _f;}()};}}\";\n    _f.__workletHash = 16853107330833;\n    _f.__location = \"C:\\\\Users\\\\GGPC\\\\Documents\\\\kidsgram-web\\\\node_modules\\\\react-native-gesture-handler\\\\lib\\\\module\\\\handlers\\\\gestures\\\\gestureStateManager.js\";\n    global.__reanimatedWorkletInit(_f);\n    return _f;\n  }()\n};","map":{"version":3,"names":["Reanimated","State","GestureStateManager","create","_f","handlerTag","begin","setGestureState","BEGAN","console","warn","_closure","activate","ACTIVE","fail","FAILED","end","END"],"sources":["C:\\Users\\GGPC\\Documents\\kidsgram-web\\node_modules\\react-native-gesture-handler\\lib\\module\\handlers\\gestures\\gestureStateManager.ts"],"sourcesContent":["import { Reanimated } from './reanimatedWrapper';\nimport { State } from '../../State';\n\nexport interface GestureStateManagerType {\n  begin: () => void;\n  activate: () => void;\n  fail: () => void;\n  end: () => void;\n}\n\nexport const GestureStateManager = {\n  create(handlerTag: number): GestureStateManagerType {\n    'worklet';\n    return {\n      begin: () => {\n        'worklet';\n        if (Reanimated) {\n          Reanimated.setGestureState(handlerTag, State.BEGAN);\n        } else {\n          console.warn(\n            'react-native-reanimated is required in order to use synchronous state management'\n          );\n        }\n      },\n\n      activate: () => {\n        'worklet';\n        if (Reanimated) {\n          Reanimated.setGestureState(handlerTag, State.ACTIVE);\n        } else {\n          console.warn(\n            'react-native-reanimated is required in order to use synchronous state management'\n          );\n        }\n      },\n\n      fail: () => {\n        'worklet';\n        if (Reanimated) {\n          Reanimated.setGestureState(handlerTag, State.FAILED);\n        } else {\n          console.warn(\n            'react-native-reanimated is required in order to use synchronous state management'\n          );\n        }\n      },\n\n      end: () => {\n        'worklet';\n        if (Reanimated) {\n          Reanimated.setGestureState(handlerTag, State.END);\n        } else {\n          console.warn(\n            'react-native-reanimated is required in order to use synchronous state management'\n          );\n        }\n      },\n    };\n  },\n};\n"],"mappings":"AAAA,SAASA,UAAT;AACA,SAASC,KAAT;AASA,OAAO,IAAMC,mBAAmB,GAAG;EACjCC,MAAM;IAAA,IAAAC,EAAA,YAAAA,GAACC,UAAD,EAA8C;MAElD,OAAO;QACLC,KAAK;UAAA,IAAAF,EAAA,YAAAA,GAAA,EAAQ;YAEX,IAAIJ,UAAJ,EAAgB;cACdA,UAAU,CAACO,eAAX,CAA2BF,UAA3B,EAAuCJ,KAAK,CAACO,KAA7C;YACD,CAFD,MAEO;cACLC,OAAO,CAACC,IAAR,CACE,kFADF;YAGD;UACF,CAVI;UAAAN,EAAA,CAAAO,QAAA;YAAAX,UAAA,EADPA,UAAA;YAAAK,UAAA,E;;;;;;;;;;WACO;QAYLO,QAAQ;UAAA,IAAAR,EAAA,YAAAA,GAAA,EAAQ;YAEd,IAAIJ,UAAJ,EAAgB;cACdA,UAAU,CAACO,eAAX,CAA2BF,UAA3B,EAAuCJ,KAAK,CAACY,MAA7C;YACD,CAFD,MAEO;cACLJ,OAAO,CAACC,IAAR,CACE,kFADF;YAGD;UACF,CArBI;UAAAN,EAAA,CAAAO,QAAA;YAAAX,UAAA,EADPA,UAAA;YAAAK,UAAA,E;;;;;;;;;;WACO;QAuBLS,IAAI;UAAA,IAAAV,EAAA,YAAAA,GAAA,EAAQ;YAEV,IAAIJ,UAAJ,EAAgB;cACdA,UAAU,CAACO,eAAX,CAA2BF,UAA3B,EAAuCJ,KAAK,CAACc,MAA7C;YACD,CAFD,MAEO;cACLN,OAAO,CAACC,IAAR,CACE,kFADF;YAGD;UACF,CAhCI;UAAAN,EAAA,CAAAO,QAAA;YAAAX,UAAA,EADPA,UAAA;YAAAK,UAAA,E;;;;;;;;;;WACO;QAkCLW,GAAG;UAAA,IAAAZ,EAAA,YAAAA,GAAA,EAAQ;YAET,IAAIJ,UAAJ,EAAgB;cACdA,UAAU,CAACO,eAAX,CAA2BF,UAA3B,EAAuCJ,KAAK,CAACgB,GAA7C;YACD,CAFD,MAEO;cACLR,OAAO,CAACC,IAAR,CACE,kFADF;YAGD;UACF;UAAAN,EAAA,CAAAO,QAAA;YAAAX,UAAA,EA5CHA,UAAA;YAAAK,UAAA,E;;;;;;;;;;;MACO,CAAP;IA6CD;IAAAD,EAAA,CAAAO,QAAA;MAAAX,UAAA,E;;eAhCKC,KAAA,CAAAO,KAAA;QAAAK,MAAA,EAwBEZ,KAAW,CAAAY,MAAA;QAAAE,MAAA,E;;;;;;;;;;AAxCc,CAA5B"},"metadata":{},"sourceType":"module","externalDependencies":[]}